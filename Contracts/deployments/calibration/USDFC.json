{
  "address": "0x14b547e6d31705dab3bf1a382bAFFd8274127819",
  "abi": [
    {
      "inputs": [],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "allowance",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "needed",
          "type": "uint256"
        }
      ],
      "name": "ERC20InsufficientAllowance",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "sender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "balance",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "needed",
          "type": "uint256"
        }
      ],
      "name": "ERC20InsufficientBalance",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "approver",
          "type": "address"
        }
      ],
      "name": "ERC20InvalidApprover",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "receiver",
          "type": "address"
        }
      ],
      "name": "ERC20InvalidReceiver",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "sender",
          "type": "address"
        }
      ],
      "name": "ERC20InvalidSender",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        }
      ],
      "name": "ERC20InvalidSpender",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        }
      ],
      "name": "OwnableInvalidOwner",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "OwnableUnauthorizedAccount",
      "type": "error"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "Approval",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "user",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "CollateralDeposited",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "user",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "collateralAmount",
          "type": "uint256"
        }
      ],
      "name": "Mint",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "user",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "collateralAmount",
          "type": "uint256"
        }
      ],
      "name": "Redeem",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "Transfer",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "COLLATERAL_RATIO",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        }
      ],
      "name": "allowance",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "approve",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "balanceOf",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "collateralDeposits",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "decimals",
      "outputs": [
        {
          "internalType": "uint8",
          "name": "",
          "type": "uint8"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "user",
          "type": "address"
        }
      ],
      "name": "getCollateralInfo",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "depositedCollateral",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "collateralRatio",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "mint",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "mintWithCollateral",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "name",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "redeem",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "renounceOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "symbol",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "totalSupply",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "transfer",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "transferFrom",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "stateMutability": "payable",
      "type": "receive"
    }
  ],
  "transactionHash": "0x40f26a99dd85e4816315b4c7ceac22679b852a23c202570ef9e075878539a0b6",
  "receipt": {
    "to": null,
    "from": "0x268d62aba7C42fCB4D72A83137DB503935f764fF",
    "contractAddress": "0x14b547e6d31705dab3bf1a382bAFFd8274127819",
    "transactionIndex": 0,
    "gasUsed": "72116094",
    "logsBloom": "0x00000000000000000000000000000002000000100000000000800000000000000000000000000000000000000000000000040000000000000000000000000000000000000000000000000008000000000001000000000000000000000000000000000000020000000000000000000800000000000000000000000010800000400000000080000000000000000000080000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000002000000000000000000000000000000000000000000000000000020000000000000000000000000000000000000000000000000000000000000000000",
    "blockHash": "0x078de94097bdf1e27ab7d1f251792c4228d12084f074dda234687950196e175d",
    "transactionHash": "0x40f26a99dd85e4816315b4c7ceac22679b852a23c202570ef9e075878539a0b6",
    "logs": [
      {
        "transactionIndex": 0,
        "blockNumber": 2820589,
        "transactionHash": "0x40f26a99dd85e4816315b4c7ceac22679b852a23c202570ef9e075878539a0b6",
        "address": "0x14b547e6d31705dab3bf1a382bAFFd8274127819",
        "topics": [
          "0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0",
          "0x0000000000000000000000000000000000000000000000000000000000000000",
          "0x000000000000000000000000268d62aba7c42fcb4d72a83137db503935f764ff"
        ],
        "data": "0x",
        "logIndex": 0,
        "blockHash": "0x078de94097bdf1e27ab7d1f251792c4228d12084f074dda234687950196e175d"
      },
      {
        "transactionIndex": 0,
        "blockNumber": 2820589,
        "transactionHash": "0x40f26a99dd85e4816315b4c7ceac22679b852a23c202570ef9e075878539a0b6",
        "address": "0x14b547e6d31705dab3bf1a382bAFFd8274127819",
        "topics": [
          "0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef",
          "0x0000000000000000000000000000000000000000000000000000000000000000",
          "0x000000000000000000000000268d62aba7c42fcb4d72a83137db503935f764ff"
        ],
        "data": "0x00000000000000000000000000000000000000000000152d02c7e14af6800000",
        "logIndex": 1,
        "blockHash": "0x078de94097bdf1e27ab7d1f251792c4228d12084f074dda234687950196e175d"
      }
    ],
    "blockNumber": 2820589,
    "cumulativeGasUsed": "0",
    "status": 1,
    "byzantium": true
  },
  "args": [],
  "numDeployments": 1,
  "solcInputHash": "81f334fbcef587e9503e543454ef557b",
  "metadata": "{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"OwnableInvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"OwnableUnauthorizedAccount\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"CollateralDeposited\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"collateralAmount\",\"type\":\"uint256\"}],\"name\":\"Mint\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"collateralAmount\",\"type\":\"uint256\"}],\"name\":\"Redeem\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"COLLATERAL_RATIO\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"collateralDeposits\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"}],\"name\":\"getCollateralInfo\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"depositedCollateral\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"collateralRatio\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"mint\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"mintWithCollateral\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"redeem\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"stateMutability\":\"payable\",\"type\":\"receive\"}],\"devdoc\":{\"details\":\"Mock USDFC token for testing VerifiAI marketplace\",\"errors\":{\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"OwnableInvalidOwner(address)\":[{\"details\":\"The owner is not a valid owner account. (eg. `address(0)`)\"}],\"OwnableUnauthorizedAccount(address)\":[{\"details\":\"The caller account is not authorized to perform an operation.\"}]},\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"decimals()\":{\"details\":\"Returns the number of decimals (18 like real USDFC)\"},\"getCollateralInfo(address)\":{\"details\":\"Get user's collateral info\",\"params\":{\"user\":\"User address\"},\"returns\":{\"collateralRatio\":\"Current collateral ratio percentage\",\"depositedCollateral\":\"Amount of FIL deposited as collateral\"}},\"mint(address,uint256)\":{\"details\":\"Mint tokens directly (only owner, for testing purposes)\",\"params\":{\"amount\":\"Amount to mint\",\"to\":\"Address to mint tokens to\"}},\"mintWithCollateral()\":{\"details\":\"Mint USDFC by depositing FIL as collateral (mock version)\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"redeem(uint256)\":{\"details\":\"Redeem USDFC for FIL collateral\",\"params\":{\"amount\":\"Amount of USDFC to redeem\"}},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Skips emitting an {Approval} event indicating an allowance update. This is not required by the ERC. See {xref-ERC20-_approve-address-address-uint256-bool-}[_approve]. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"title\":\"USDFC - Mock USD Filecoin for Calibration Testnet\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"mintWithCollateral()\":{\"notice\":\"For testing: 1000 USDFC per FIL (0.1 FIL = 100 USDFC)\"}},\"notice\":\"Based on the real USDFC by Secured Finance, this is a testnet version\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/USDFC.sol\":\"USDFC\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"details\":{\"constantOptimizer\":true,\"cse\":true,\"deduplicate\":true,\"inliner\":true,\"jumpdestRemover\":true,\"orderLiterals\":true,\"peephole\":true,\"simpleCounterForLoopUncheckedIncrement\":true,\"yul\":true,\"yulDetails\":{\"optimizerSteps\":\"dhfoDgvulfnTUtnIf:fDnTOcmu\",\"stackAllocation\":true}},\"runs\":1000},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (access/Ownable.sol)\\n\\npragma solidity ^0.8.20;\\n\\nimport {Context} from \\\"../utils/Context.sol\\\";\\n\\n/**\\n * @dev Contract module which provides a basic access control mechanism, where\\n * there is an account (an owner) that can be granted exclusive access to\\n * specific functions.\\n *\\n * The initial owner is set to the address provided by the deployer. This can\\n * later be changed with {transferOwnership}.\\n *\\n * This module is used through inheritance. It will make available the modifier\\n * `onlyOwner`, which can be applied to your functions to restrict their use to\\n * the owner.\\n */\\nabstract contract Ownable is Context {\\n    address private _owner;\\n\\n    /**\\n     * @dev The caller account is not authorized to perform an operation.\\n     */\\n    error OwnableUnauthorizedAccount(address account);\\n\\n    /**\\n     * @dev The owner is not a valid owner account. (eg. `address(0)`)\\n     */\\n    error OwnableInvalidOwner(address owner);\\n\\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\\n\\n    /**\\n     * @dev Initializes the contract setting the address provided by the deployer as the initial owner.\\n     */\\n    constructor(address initialOwner) {\\n        if (initialOwner == address(0)) {\\n            revert OwnableInvalidOwner(address(0));\\n        }\\n        _transferOwnership(initialOwner);\\n    }\\n\\n    /**\\n     * @dev Throws if called by any account other than the owner.\\n     */\\n    modifier onlyOwner() {\\n        _checkOwner();\\n        _;\\n    }\\n\\n    /**\\n     * @dev Returns the address of the current owner.\\n     */\\n    function owner() public view virtual returns (address) {\\n        return _owner;\\n    }\\n\\n    /**\\n     * @dev Throws if the sender is not the owner.\\n     */\\n    function _checkOwner() internal view virtual {\\n        if (owner() != _msgSender()) {\\n            revert OwnableUnauthorizedAccount(_msgSender());\\n        }\\n    }\\n\\n    /**\\n     * @dev Leaves the contract without owner. It will not be possible to call\\n     * `onlyOwner` functions. Can only be called by the current owner.\\n     *\\n     * NOTE: Renouncing ownership will leave the contract without an owner,\\n     * thereby disabling any functionality that is only available to the owner.\\n     */\\n    function renounceOwnership() public virtual onlyOwner {\\n        _transferOwnership(address(0));\\n    }\\n\\n    /**\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\\n     * Can only be called by the current owner.\\n     */\\n    function transferOwnership(address newOwner) public virtual onlyOwner {\\n        if (newOwner == address(0)) {\\n            revert OwnableInvalidOwner(address(0));\\n        }\\n        _transferOwnership(newOwner);\\n    }\\n\\n    /**\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\\n     * Internal function without access restriction.\\n     */\\n    function _transferOwnership(address newOwner) internal virtual {\\n        address oldOwner = _owner;\\n        _owner = newOwner;\\n        emit OwnershipTransferred(oldOwner, newOwner);\\n    }\\n}\\n\",\"keccak256\":\"0xff6d0bb2e285473e5311d9d3caacb525ae3538a80758c10649a4d61029b017bb\",\"license\":\"MIT\"},\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.1.0) (interfaces/draft-IERC6093.sol)\\npragma solidity ^0.8.20;\\n\\n/**\\n * @dev Standard ERC-20 Errors\\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-20 tokens.\\n */\\ninterface IERC20Errors {\\n    /**\\n     * @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\\n     * @param sender Address whose tokens are being transferred.\\n     * @param balance Current balance for the interacting account.\\n     * @param needed Minimum amount required to perform a transfer.\\n     */\\n    error ERC20InsufficientBalance(address sender, uint256 balance, uint256 needed);\\n\\n    /**\\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\\n     * @param sender Address whose tokens are being transferred.\\n     */\\n    error ERC20InvalidSender(address sender);\\n\\n    /**\\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\\n     * @param receiver Address to which tokens are being transferred.\\n     */\\n    error ERC20InvalidReceiver(address receiver);\\n\\n    /**\\n     * @dev Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\\n     * @param spender Address that may be allowed to operate on tokens without being their owner.\\n     * @param allowance Amount of tokens a `spender` is allowed to operate with.\\n     * @param needed Minimum amount required to perform a transfer.\\n     */\\n    error ERC20InsufficientAllowance(address spender, uint256 allowance, uint256 needed);\\n\\n    /**\\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\\n     * @param approver Address initiating an approval operation.\\n     */\\n    error ERC20InvalidApprover(address approver);\\n\\n    /**\\n     * @dev Indicates a failure with the `spender` to be approved. Used in approvals.\\n     * @param spender Address that may be allowed to operate on tokens without being their owner.\\n     */\\n    error ERC20InvalidSpender(address spender);\\n}\\n\\n/**\\n * @dev Standard ERC-721 Errors\\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-721 tokens.\\n */\\ninterface IERC721Errors {\\n    /**\\n     * @dev Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in ERC-20.\\n     * Used in balance queries.\\n     * @param owner Address of the current owner of a token.\\n     */\\n    error ERC721InvalidOwner(address owner);\\n\\n    /**\\n     * @dev Indicates a `tokenId` whose `owner` is the zero address.\\n     * @param tokenId Identifier number of a token.\\n     */\\n    error ERC721NonexistentToken(uint256 tokenId);\\n\\n    /**\\n     * @dev Indicates an error related to the ownership over a particular token. Used in transfers.\\n     * @param sender Address whose tokens are being transferred.\\n     * @param tokenId Identifier number of a token.\\n     * @param owner Address of the current owner of a token.\\n     */\\n    error ERC721IncorrectOwner(address sender, uint256 tokenId, address owner);\\n\\n    /**\\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\\n     * @param sender Address whose tokens are being transferred.\\n     */\\n    error ERC721InvalidSender(address sender);\\n\\n    /**\\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\\n     * @param receiver Address to which tokens are being transferred.\\n     */\\n    error ERC721InvalidReceiver(address receiver);\\n\\n    /**\\n     * @dev Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\\n     * @param tokenId Identifier number of a token.\\n     */\\n    error ERC721InsufficientApproval(address operator, uint256 tokenId);\\n\\n    /**\\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\\n     * @param approver Address initiating an approval operation.\\n     */\\n    error ERC721InvalidApprover(address approver);\\n\\n    /**\\n     * @dev Indicates a failure with the `operator` to be approved. Used in approvals.\\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\\n     */\\n    error ERC721InvalidOperator(address operator);\\n}\\n\\n/**\\n * @dev Standard ERC-1155 Errors\\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-1155 tokens.\\n */\\ninterface IERC1155Errors {\\n    /**\\n     * @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\\n     * @param sender Address whose tokens are being transferred.\\n     * @param balance Current balance for the interacting account.\\n     * @param needed Minimum amount required to perform a transfer.\\n     * @param tokenId Identifier number of a token.\\n     */\\n    error ERC1155InsufficientBalance(address sender, uint256 balance, uint256 needed, uint256 tokenId);\\n\\n    /**\\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\\n     * @param sender Address whose tokens are being transferred.\\n     */\\n    error ERC1155InvalidSender(address sender);\\n\\n    /**\\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\\n     * @param receiver Address to which tokens are being transferred.\\n     */\\n    error ERC1155InvalidReceiver(address receiver);\\n\\n    /**\\n     * @dev Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\\n     * @param owner Address of the current owner of a token.\\n     */\\n    error ERC1155MissingApprovalForAll(address operator, address owner);\\n\\n    /**\\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\\n     * @param approver Address initiating an approval operation.\\n     */\\n    error ERC1155InvalidApprover(address approver);\\n\\n    /**\\n     * @dev Indicates a failure with the `operator` to be approved. Used in approvals.\\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\\n     */\\n    error ERC1155InvalidOperator(address operator);\\n\\n    /**\\n     * @dev Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation.\\n     * Used in batch transfers.\\n     * @param idsLength Length of the array of token identifiers\\n     * @param valuesLength Length of the array of token amounts\\n     */\\n    error ERC1155InvalidArrayLength(uint256 idsLength, uint256 valuesLength);\\n}\\n\",\"keccak256\":\"0x880da465c203cec76b10d72dbd87c80f387df4102274f23eea1f9c9b0918792b\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.3.0) (token/ERC20/ERC20.sol)\\n\\npragma solidity ^0.8.20;\\n\\nimport {IERC20} from \\\"./IERC20.sol\\\";\\nimport {IERC20Metadata} from \\\"./extensions/IERC20Metadata.sol\\\";\\nimport {Context} from \\\"../../utils/Context.sol\\\";\\nimport {IERC20Errors} from \\\"../../interfaces/draft-IERC6093.sol\\\";\\n\\n/**\\n * @dev Implementation of the {IERC20} interface.\\n *\\n * This implementation is agnostic to the way tokens are created. This means\\n * that a supply mechanism has to be added in a derived contract using {_mint}.\\n *\\n * TIP: For a detailed writeup see our guide\\n * https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How\\n * to implement supply mechanisms].\\n *\\n * The default value of {decimals} is 18. To change this, you should override\\n * this function so it returns a different value.\\n *\\n * We have followed general OpenZeppelin Contracts guidelines: functions revert\\n * instead returning `false` on failure. This behavior is nonetheless\\n * conventional and does not conflict with the expectations of ERC-20\\n * applications.\\n */\\nabstract contract ERC20 is Context, IERC20, IERC20Metadata, IERC20Errors {\\n    mapping(address account => uint256) private _balances;\\n\\n    mapping(address account => mapping(address spender => uint256)) private _allowances;\\n\\n    uint256 private _totalSupply;\\n\\n    string private _name;\\n    string private _symbol;\\n\\n    /**\\n     * @dev Sets the values for {name} and {symbol}.\\n     *\\n     * Both values are immutable: they can only be set once during construction.\\n     */\\n    constructor(string memory name_, string memory symbol_) {\\n        _name = name_;\\n        _symbol = symbol_;\\n    }\\n\\n    /**\\n     * @dev Returns the name of the token.\\n     */\\n    function name() public view virtual returns (string memory) {\\n        return _name;\\n    }\\n\\n    /**\\n     * @dev Returns the symbol of the token, usually a shorter version of the\\n     * name.\\n     */\\n    function symbol() public view virtual returns (string memory) {\\n        return _symbol;\\n    }\\n\\n    /**\\n     * @dev Returns the number of decimals used to get its user representation.\\n     * For example, if `decimals` equals `2`, a balance of `505` tokens should\\n     * be displayed to a user as `5.05` (`505 / 10 ** 2`).\\n     *\\n     * Tokens usually opt for a value of 18, imitating the relationship between\\n     * Ether and Wei. This is the default value returned by this function, unless\\n     * it's overridden.\\n     *\\n     * NOTE: This information is only used for _display_ purposes: it in\\n     * no way affects any of the arithmetic of the contract, including\\n     * {IERC20-balanceOf} and {IERC20-transfer}.\\n     */\\n    function decimals() public view virtual returns (uint8) {\\n        return 18;\\n    }\\n\\n    /**\\n     * @dev See {IERC20-totalSupply}.\\n     */\\n    function totalSupply() public view virtual returns (uint256) {\\n        return _totalSupply;\\n    }\\n\\n    /**\\n     * @dev See {IERC20-balanceOf}.\\n     */\\n    function balanceOf(address account) public view virtual returns (uint256) {\\n        return _balances[account];\\n    }\\n\\n    /**\\n     * @dev See {IERC20-transfer}.\\n     *\\n     * Requirements:\\n     *\\n     * - `to` cannot be the zero address.\\n     * - the caller must have a balance of at least `value`.\\n     */\\n    function transfer(address to, uint256 value) public virtual returns (bool) {\\n        address owner = _msgSender();\\n        _transfer(owner, to, value);\\n        return true;\\n    }\\n\\n    /**\\n     * @dev See {IERC20-allowance}.\\n     */\\n    function allowance(address owner, address spender) public view virtual returns (uint256) {\\n        return _allowances[owner][spender];\\n    }\\n\\n    /**\\n     * @dev See {IERC20-approve}.\\n     *\\n     * NOTE: If `value` is the maximum `uint256`, the allowance is not updated on\\n     * `transferFrom`. This is semantically equivalent to an infinite approval.\\n     *\\n     * Requirements:\\n     *\\n     * - `spender` cannot be the zero address.\\n     */\\n    function approve(address spender, uint256 value) public virtual returns (bool) {\\n        address owner = _msgSender();\\n        _approve(owner, spender, value);\\n        return true;\\n    }\\n\\n    /**\\n     * @dev See {IERC20-transferFrom}.\\n     *\\n     * Skips emitting an {Approval} event indicating an allowance update. This is not\\n     * required by the ERC. See {xref-ERC20-_approve-address-address-uint256-bool-}[_approve].\\n     *\\n     * NOTE: Does not update the allowance if the current allowance\\n     * is the maximum `uint256`.\\n     *\\n     * Requirements:\\n     *\\n     * - `from` and `to` cannot be the zero address.\\n     * - `from` must have a balance of at least `value`.\\n     * - the caller must have allowance for ``from``'s tokens of at least\\n     * `value`.\\n     */\\n    function transferFrom(address from, address to, uint256 value) public virtual returns (bool) {\\n        address spender = _msgSender();\\n        _spendAllowance(from, spender, value);\\n        _transfer(from, to, value);\\n        return true;\\n    }\\n\\n    /**\\n     * @dev Moves a `value` amount of tokens from `from` to `to`.\\n     *\\n     * This internal function is equivalent to {transfer}, and can be used to\\n     * e.g. implement automatic token fees, slashing mechanisms, etc.\\n     *\\n     * Emits a {Transfer} event.\\n     *\\n     * NOTE: This function is not virtual, {_update} should be overridden instead.\\n     */\\n    function _transfer(address from, address to, uint256 value) internal {\\n        if (from == address(0)) {\\n            revert ERC20InvalidSender(address(0));\\n        }\\n        if (to == address(0)) {\\n            revert ERC20InvalidReceiver(address(0));\\n        }\\n        _update(from, to, value);\\n    }\\n\\n    /**\\n     * @dev Transfers a `value` amount of tokens from `from` to `to`, or alternatively mints (or burns) if `from`\\n     * (or `to`) is the zero address. All customizations to transfers, mints, and burns should be done by overriding\\n     * this function.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function _update(address from, address to, uint256 value) internal virtual {\\n        if (from == address(0)) {\\n            // Overflow check required: The rest of the code assumes that totalSupply never overflows\\n            _totalSupply += value;\\n        } else {\\n            uint256 fromBalance = _balances[from];\\n            if (fromBalance < value) {\\n                revert ERC20InsufficientBalance(from, fromBalance, value);\\n            }\\n            unchecked {\\n                // Overflow not possible: value <= fromBalance <= totalSupply.\\n                _balances[from] = fromBalance - value;\\n            }\\n        }\\n\\n        if (to == address(0)) {\\n            unchecked {\\n                // Overflow not possible: value <= totalSupply or value <= fromBalance <= totalSupply.\\n                _totalSupply -= value;\\n            }\\n        } else {\\n            unchecked {\\n                // Overflow not possible: balance + value is at most totalSupply, which we know fits into a uint256.\\n                _balances[to] += value;\\n            }\\n        }\\n\\n        emit Transfer(from, to, value);\\n    }\\n\\n    /**\\n     * @dev Creates a `value` amount of tokens and assigns them to `account`, by transferring it from address(0).\\n     * Relies on the `_update` mechanism\\n     *\\n     * Emits a {Transfer} event with `from` set to the zero address.\\n     *\\n     * NOTE: This function is not virtual, {_update} should be overridden instead.\\n     */\\n    function _mint(address account, uint256 value) internal {\\n        if (account == address(0)) {\\n            revert ERC20InvalidReceiver(address(0));\\n        }\\n        _update(address(0), account, value);\\n    }\\n\\n    /**\\n     * @dev Destroys a `value` amount of tokens from `account`, lowering the total supply.\\n     * Relies on the `_update` mechanism.\\n     *\\n     * Emits a {Transfer} event with `to` set to the zero address.\\n     *\\n     * NOTE: This function is not virtual, {_update} should be overridden instead\\n     */\\n    function _burn(address account, uint256 value) internal {\\n        if (account == address(0)) {\\n            revert ERC20InvalidSender(address(0));\\n        }\\n        _update(account, address(0), value);\\n    }\\n\\n    /**\\n     * @dev Sets `value` as the allowance of `spender` over the `owner`'s tokens.\\n     *\\n     * This internal function is equivalent to `approve`, and can be used to\\n     * e.g. set automatic allowances for certain subsystems, etc.\\n     *\\n     * Emits an {Approval} event.\\n     *\\n     * Requirements:\\n     *\\n     * - `owner` cannot be the zero address.\\n     * - `spender` cannot be the zero address.\\n     *\\n     * Overrides to this logic should be done to the variant with an additional `bool emitEvent` argument.\\n     */\\n    function _approve(address owner, address spender, uint256 value) internal {\\n        _approve(owner, spender, value, true);\\n    }\\n\\n    /**\\n     * @dev Variant of {_approve} with an optional flag to enable or disable the {Approval} event.\\n     *\\n     * By default (when calling {_approve}) the flag is set to true. On the other hand, approval changes made by\\n     * `_spendAllowance` during the `transferFrom` operation set the flag to false. This saves gas by not emitting any\\n     * `Approval` event during `transferFrom` operations.\\n     *\\n     * Anyone who wishes to continue emitting `Approval` events on the`transferFrom` operation can force the flag to\\n     * true using the following override:\\n     *\\n     * ```solidity\\n     * function _approve(address owner, address spender, uint256 value, bool) internal virtual override {\\n     *     super._approve(owner, spender, value, true);\\n     * }\\n     * ```\\n     *\\n     * Requirements are the same as {_approve}.\\n     */\\n    function _approve(address owner, address spender, uint256 value, bool emitEvent) internal virtual {\\n        if (owner == address(0)) {\\n            revert ERC20InvalidApprover(address(0));\\n        }\\n        if (spender == address(0)) {\\n            revert ERC20InvalidSpender(address(0));\\n        }\\n        _allowances[owner][spender] = value;\\n        if (emitEvent) {\\n            emit Approval(owner, spender, value);\\n        }\\n    }\\n\\n    /**\\n     * @dev Updates `owner`'s allowance for `spender` based on spent `value`.\\n     *\\n     * Does not update the allowance value in case of infinite allowance.\\n     * Revert if not enough allowance is available.\\n     *\\n     * Does not emit an {Approval} event.\\n     */\\n    function _spendAllowance(address owner, address spender, uint256 value) internal virtual {\\n        uint256 currentAllowance = allowance(owner, spender);\\n        if (currentAllowance < type(uint256).max) {\\n            if (currentAllowance < value) {\\n                revert ERC20InsufficientAllowance(spender, currentAllowance, value);\\n            }\\n            unchecked {\\n                _approve(owner, spender, currentAllowance - value, false);\\n            }\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0x41f6b3b9e030561e7896dbef372b499cc8d418a80c3884a4d65a68f2fdc7493a\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.1.0) (token/ERC20/IERC20.sol)\\n\\npragma solidity ^0.8.20;\\n\\n/**\\n * @dev Interface of the ERC-20 standard as defined in the ERC.\\n */\\ninterface IERC20 {\\n    /**\\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\\n     * another (`to`).\\n     *\\n     * Note that `value` may be zero.\\n     */\\n    event Transfer(address indexed from, address indexed to, uint256 value);\\n\\n    /**\\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\\n     * a call to {approve}. `value` is the new allowance.\\n     */\\n    event Approval(address indexed owner, address indexed spender, uint256 value);\\n\\n    /**\\n     * @dev Returns the value of tokens in existence.\\n     */\\n    function totalSupply() external view returns (uint256);\\n\\n    /**\\n     * @dev Returns the value of tokens owned by `account`.\\n     */\\n    function balanceOf(address account) external view returns (uint256);\\n\\n    /**\\n     * @dev Moves a `value` amount of tokens from the caller's account to `to`.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transfer(address to, uint256 value) external returns (bool);\\n\\n    /**\\n     * @dev Returns the remaining number of tokens that `spender` will be\\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\\n     * zero by default.\\n     *\\n     * This value changes when {approve} or {transferFrom} are called.\\n     */\\n    function allowance(address owner, address spender) external view returns (uint256);\\n\\n    /**\\n     * @dev Sets a `value` amount of tokens as the allowance of `spender` over the\\n     * caller's tokens.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\\n     * that someone may use both the old and the new allowance by unfortunate\\n     * transaction ordering. One possible solution to mitigate this race\\n     * condition is to first reduce the spender's allowance to 0 and set the\\n     * desired value afterwards:\\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\\n     *\\n     * Emits an {Approval} event.\\n     */\\n    function approve(address spender, uint256 value) external returns (bool);\\n\\n    /**\\n     * @dev Moves a `value` amount of tokens from `from` to `to` using the\\n     * allowance mechanism. `value` is then deducted from the caller's\\n     * allowance.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transferFrom(address from, address to, uint256 value) external returns (bool);\\n}\\n\",\"keccak256\":\"0xe06a3f08a987af6ad2e1c1e774405d4fe08f1694b67517438b467cecf0da0ef7\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.1.0) (token/ERC20/extensions/IERC20Metadata.sol)\\n\\npragma solidity ^0.8.20;\\n\\nimport {IERC20} from \\\"../IERC20.sol\\\";\\n\\n/**\\n * @dev Interface for the optional metadata functions from the ERC-20 standard.\\n */\\ninterface IERC20Metadata is IERC20 {\\n    /**\\n     * @dev Returns the name of the token.\\n     */\\n    function name() external view returns (string memory);\\n\\n    /**\\n     * @dev Returns the symbol of the token.\\n     */\\n    function symbol() external view returns (string memory);\\n\\n    /**\\n     * @dev Returns the decimals places of the token.\\n     */\\n    function decimals() external view returns (uint8);\\n}\\n\",\"keccak256\":\"0x70f2f713b13b7ce4610bcd0ac9fec0f3cc43693b043abcb8dc40a42a726eb330\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/Context.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.1) (utils/Context.sol)\\n\\npragma solidity ^0.8.20;\\n\\n/**\\n * @dev Provides information about the current execution context, including the\\n * sender of the transaction and its data. While these are generally available\\n * via msg.sender and msg.data, they should not be accessed in such a direct\\n * manner, since when dealing with meta-transactions the account sending and\\n * paying for execution may not be the actual sender (as far as an application\\n * is concerned).\\n *\\n * This contract is only required for intermediate, library-like contracts.\\n */\\nabstract contract Context {\\n    function _msgSender() internal view virtual returns (address) {\\n        return msg.sender;\\n    }\\n\\n    function _msgData() internal view virtual returns (bytes calldata) {\\n        return msg.data;\\n    }\\n\\n    function _contextSuffixLength() internal view virtual returns (uint256) {\\n        return 0;\\n    }\\n}\\n\",\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\"},\"contracts/USDFC.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.19;\\n\\nimport \\\"@openzeppelin/contracts/token/ERC20/ERC20.sol\\\";\\nimport \\\"@openzeppelin/contracts/access/Ownable.sol\\\";\\n\\n/**\\n * @title USDFC - Mock USD Filecoin for Calibration Testnet\\n * @dev Mock USDFC token for testing VerifiAI marketplace\\n * @notice Based on the real USDFC by Secured Finance, this is a testnet version\\n */\\ncontract USDFC is ERC20, Ownable {\\n    uint8 private _decimals = 18;\\n    \\n    // Mock collateral ratio (110% like real USDFC)\\n    uint256 public constant COLLATERAL_RATIO = 110;\\n    \\n    event Mint(address indexed user, uint256 amount, uint256 collateralAmount);\\n    event Redeem(address indexed user, uint256 amount, uint256 collateralAmount);\\n    event CollateralDeposited(address indexed user, uint256 amount);\\n    \\n    // Track FIL collateral deposited by users\\n    mapping(address => uint256) public collateralDeposits;\\n    \\n    constructor() ERC20(\\\"USD Filecoin\\\", \\\"USDFC\\\") Ownable(msg.sender) {\\n        // Mint initial supply for testing (100,000 USDFC)\\n        _mint(msg.sender, 100000 * 10**decimals());\\n    }\\n    \\n    /**\\n     * @dev Mint USDFC by depositing FIL as collateral (mock version)\\n     * @notice For testing: 1000 USDFC per FIL (0.1 FIL = 100 USDFC)\\n     */\\n    function mintWithCollateral() external payable {\\n        require(msg.value > 0, \\\"Must send FIL as collateral\\\");\\n        \\n        // Calculate USDFC to mint (generous for testing)\\n        // 1000 USDFC per FIL (0.1 FIL = 100 USDFC)\\n        uint256 usdcAmount = msg.value * 1000; // 1000 USDFC per FIL\\n        \\n        collateralDeposits[msg.sender] += msg.value;\\n        _mint(msg.sender, usdcAmount);\\n        \\n        emit Mint(msg.sender, usdcAmount, msg.value);\\n        emit CollateralDeposited(msg.sender, msg.value);\\n    }\\n    \\n    /**\\n     * @dev Redeem USDFC for FIL collateral\\n     * @param amount Amount of USDFC to redeem\\n     */\\n    function redeem(uint256 amount) external {\\n        require(balanceOf(msg.sender) >= amount, \\\"Insufficient USDFC balance\\\");\\n        \\n        // Calculate FIL to return (reverse of 1000 USDFC per FIL)\\n        uint256 filAmount = amount / 1000; // 1000 USDFC = 1 FIL\\n        require(collateralDeposits[msg.sender] >= filAmount, \\\"Insufficient collateral\\\");\\n        \\n        collateralDeposits[msg.sender] -= filAmount;\\n        _burn(msg.sender, amount);\\n        payable(msg.sender).transfer(filAmount);\\n        \\n        emit Redeem(msg.sender, amount, filAmount);\\n    }\\n    \\n    /**\\n     * @dev Mint tokens directly (only owner, for testing purposes)\\n     * @param to Address to mint tokens to\\n     * @param amount Amount to mint\\n     */\\n    function mint(address to, uint256 amount) external onlyOwner {\\n        _mint(to, amount);\\n    }\\n    \\n    /**\\n     * @dev Returns the number of decimals (18 like real USDFC)\\n     */\\n    function decimals() public view virtual override returns (uint8) {\\n        return _decimals;\\n    }\\n    \\n    /**\\n     * @dev Get user's collateral info\\n     * @param user User address\\n     * @return depositedCollateral Amount of FIL deposited as collateral\\n     * @return collateralRatio Current collateral ratio percentage\\n     */\\n    function getCollateralInfo(address user) external view returns (\\n        uint256 depositedCollateral,\\n        uint256 collateralRatio\\n    ) {\\n        depositedCollateral = collateralDeposits[user];\\n        uint256 userBalance = balanceOf(user);\\n        \\n        if (userBalance == 0) {\\n            collateralRatio = 0;\\n        } else {\\n            // Calculate ratio: (collateral * 1000) / userBalance * 100\\n            collateralRatio = (depositedCollateral * 1000 * 100) / userBalance;\\n        }\\n    }\\n    \\n    /**\\n     * @dev Fallback function to handle direct FIL transfers for minting\\n     */\\n    receive() external payable {\\n        require(msg.value > 0, \\\"Must send FIL as collateral\\\");\\n        \\n        // Calculate USDFC to mint (generous for testing)\\n        // 1000 USDFC per FIL (0.1 FIL = 100 USDFC)\\n        uint256 usdcAmount = msg.value * 1000; // 1000 USDFC per FIL\\n        \\n        collateralDeposits[msg.sender] += msg.value;\\n        _mint(msg.sender, usdcAmount);\\n        \\n        emit Mint(msg.sender, usdcAmount, msg.value);\\n        emit CollateralDeposited(msg.sender, msg.value);\\n    }\\n} \",\"keccak256\":\"0xd80d817a071254ca1cd82af64042a46cbd162c2c0e7ea8cac5b4bc6a6f95b47f\",\"license\":\"MIT\"}},\"version\":1}",
  "bytecode": "0x608060405234620000265762000014620001af565b6040516111ca6200082882396111ca90f35b600080fd5b634e487b7160e01b600052604160045260246000fd5b90601f01601f191681019081106001600160401b038211176200006357604052565b6200002b565b90620000806200007860405190565b928362000041565b565b6001600160401b0381116200006357602090601f01601f19160190565b90620000b5620000af8362000082565b62000069565b918252565b620000c6600c6200009f565b6b2aa9a2102334b632b1b7b4b760a11b602082015290565b620000e8620000ba565b90565b620000f760056200009f565b64555344464360d81b602082015290565b620000e8620000eb565b9060ff60a01b9060a01b5b9181191691161790565b62000137620000e8620000e89290565b60ff1690565b9062000151620000e8620001599262000127565b825462000112565b9055565b634e487b7160e01b600052601160045260246000fd5b60ff16604d81116200018557600a0a90565b6200015d565b620000e8620000e8620000e89290565b818102929181159184041417156200018557565b620001cf620001bd620000de565b620001c762000108565b90336200025c565b620001dd601260056200013d565b620000806200020d620001f9620001f3620004e2565b62000173565b62000207620186a06200018b565b6200019b565b33620004ee565b62000224620000e8620000e89290565b6001600160a01b031690565b620000e89062000214565b620002469062000224565b9052565b6020810192916200008091906200023b565b916200026891620004ae565b62000274600062000230565b6200027f8162000224565b6200028a8362000224565b146200029c57506200008090620005ba565b620002c290620002ab60405190565b631e4fbdf760e01b8152918291600483016200024a565b0390fd5b634e487b7160e01b600052602260045260246000fd5b9060016002830492168015620002ff575b6020831014620002f957565b620002c6565b91607f1691620002ed565b9160001960089290920291821b911b6200011d565b919062000334620000e862000159936200018b565b9083546200030a565b62000080916000916200031f565b81811062000357575050565b806200036760006001936200033d565b016200034b565b9190601f81116200037e57505050565b620003926200008093600052602060002090565b906020601f840181900483019310620003b6575b6020601f9091010401906200034b565b9091508190620003a6565b90620003cb815190565b906001600160401b0382116200006357620003f382620003ec8554620002dc565b856200036e565b602090601f831160011462000432576200015992916000918362000426575b5050600019600883021c1916906002021790565b01519050388062000412565b601f198316916200044885600052602060002090565b9260005b81811062000489575091600293918560019694106200046f575b50505002019055565b01516000196008601f8516021c1916905538808062000466565b919360206001819287870151815501950192016200044c565b906200008091620003c1565b90620004c062000080926003620004a2565b6004620004a2565b620000e89060a01c62000137565b620000e89054620004c8565b620000e86005620004d6565b9190620004fc600062000230565b92620005088462000224565b620005138262000224565b146200052557620000809293620006ae565b620002c2846200053460405190565b63ec442f0560e01b8152918291600483016200024a565b620000e89062000224565b620000e890546200054b565b906001600160a01b03906200011d565b620000e89062000224906001600160a01b031682565b620000e89062000572565b620000e89062000588565b90620005b2620000e8620001599262000593565b825462000562565b620005e8620005e1620005ce600562000556565b620005db8460056200059e565b62000593565b9162000593565b907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e06200061460405190565b80805b0390a3565b90620006289062000593565b600052602052604060002090565b620000e89081565b620000e8905462000636565b604090620006756200008094969593966200066e606084019860008501906200023b565b6020830152565b0152565b90600019906200011d565b9062000698620000e862000159926200018b565b825462000679565b919082018092116200018557565b816000620006bc8162000230565b620006c78162000224565b620006d28562000224565b036200079b57600080516020620019f283398151915293620006179362000758936200072562000751946200071f620007178c6200071160026200063e565b620006a0565b600262000684565b62000224565b620007308362000224565b0362000770575050620005db62000717886200074d60026200063e565b0390565b9362000593565b936200076360405190565b9182918290815260200190565b620005db9162000780916200061c565b620007948962000790836200063e565b0190565b9062000684565b909150620007b4620007ae84846200061c565b6200063e565b8581106200080057600080516020620019f2833981519152938562000617946200072562000758956200071f620007ee8c62000751980390565b620007fa87866200061c565b62000684565b83620002c2876200081060405190565b63391434e360e21b8152938493600485016200064a56fe60806040526004361015610023575b361561001957600080fd5b61002161090e565b005b60003560e01c806306fdde0314610143578063095ea7b31461013e57806318160ddd1461013957806323b872dd14610134578063313ce5671461012f578063333522101461012a57806340c10f191461012557806370a0823114610120578063715018a61461011b5780638da5cb5b1461011657806395d89b41146101115780639ee671721461010c578063a9059cbb14610107578063d9e69a0514610102578063db006a75146100fd578063dd62ed3e146100f8578063edc7d04f146100f35763f2fde38b0361000e57610577565b61055c565b6104d5565b61049a565b61046b565b610430565b61041d565b610402565b6103cd565b6103b5565b61039a565b61037c565b61034e565b6102f4565b6102d8565b610283565b610255565b6101c7565b600091031261015357565b600080fd5b60005b83811061016b5750506000910152565b818101518382015260200161015b565b61019c6101a56020936101af93610190815190565b80835293849260200190565b95869101610158565b601f01601f191690565b0190565b60208082526101c49291019061017b565b90565b34610153576101d7366004610148565b6101ee6101e26106c4565b604051918291826101b3565b0390f35b6001600160a01b031690565b6001600160a01b0381165b0361015357565b9050359061021d826101fe565b565b80610209565b9050359061021d8261021f565b9190604083820312610153576101c490602061024e8286610210565b9401610225565b34610153576101ee61027161026b366004610232565b906106ce565b60405191829182901515815260200190565b3461015357610293366004610148565b6101ee61029e6106ef565b6040515b9182918290815260200190565b9091606082840312610153576101c46102c88484610210565b93604061024e8260208701610210565b34610153576101ee6102716102ee3660046102af565b916106f9565b3461015357610304366004610148565b6101ee61030f610726565b6040519182918260ff909116815260200190565b90602082820312610153576101c491610210565b90815260408101929161021d9160200152565b0152565b3461015357610366610361366004610323565b610783565b906101ee61037360405190565b92839283610337565b346101535761039561038f366004610232565b906107fe565b604051005b34610153576101ee61029e6103b0366004610323565b610808565b34610153576103c5366004610148565b610395610857565b34610153576103dd366004610148565b6101ee6103e8610872565b604051918291826001600160a01b03909116815260200190565b3461015357610412366004610148565b6101ee6101e261087c565b610428366004610148565b61039561090e565b34610153576101ee610271610446366004610232565b906109e6565b6101c46101c46101c49290565b6101c4606e61044c565b6101c4610459565b346101535761047b366004610148565b6101ee61029e610463565b90602082820312610153576101c491610225565b34610153576103956104ad366004610486565b610aa2565b9190604083820312610153576101c49060206104ce8286610210565b9401610210565b34610153576101ee61029e6104eb3660046104b2565b90610b78565b6101f26101c46101c4926001600160a01b031690565b6101c4906104f1565b6101c490610507565b9061052390610510565b600052602052604060002090565b6101c4916008021c81565b906101c49154610531565b60006105576101c4926006610519565b61053c565b34610153576101ee61029e610572366004610323565b610547565b346101535761039561058a366004610323565b610c1b565b634e487b7160e01b600052602260045260246000fd5b90600160028304921680156105c5575b60208310146105c057565b61058f565b91607f16916105b5565b805460009392916105ec6105e2836105a5565b8085529360200190565b916001811690811561063e575060011461060557505050565b6106189192939450600052602060002090565b916000925b81841061062a5750500190565b80548484015260209093019260010161061d565b92949550505060ff1916825215156020020190565b906101c4916105cf565b634e487b7160e01b600052604160045260246000fd5b90601f01601f1916810190811067ffffffffffffffff82111761069557604052565b61065d565b9061021d6106b4926106ab60405190565b93848092610653565b0383610673565b6101c49061069a565b6101c460036106bb565b6106d9919033610c24565b600190565b6101c49081565b6101c490546106de565b6101c460026106e5565b6106d992919061070a833383610c58565b610cd6565b6101c49060a01c60ff1690565b6101c4905461070f565b6101c4600561071c565b634e487b7160e01b600052601160045260246000fd5b8181029291811591840414171561075957565b610730565b634e487b7160e01b600052601260045260246000fd5b811561077e570490565b61075e565b90610797610792836006610519565b6106e5565b6107a18193610808565b6107ab600061044c565b81036107bd5750506101c4600061044c565b6107e26107d86101c4936107d26103e861044c565b90610746565b6107d2606461044c565b610774565b9061021d916107f4610db5565b9061021d91610e1c565b9061021d916107e7565b6107926101c491610817600090565b506000610519565b610827610db5565b61021d610845565b6101f26101c46101c49290565b6101c49061082f565b61021d610852600061083c565b610e7f565b61021d61081f565b6101c4906101f2565b6101c4905461085f565b6101c46005610868565b6101c460046106bb565b1561088d57565b60405162461bcd60e51b815260206004820152601b60248201527f4d7573742073656e642046494c20617320636f6c6c61746572616c00000000006044820152606490fd5b0390fd5b9190820180921161075957565b90600019905b9181191691161790565b906109036101c461090a9261044c565b82546108e3565b9055565b61092261091b600061044c565b3411610886565b6109ab6109396109336103e861044c565b34610746565b610960610947336006610519565b61095a610953826106e5565b34906108d6565b906108f3565b61096a8133610e1c565b7f4c209b5fc8ad50758f13e2e1088ba56a560dff690a1c6fef26394f4c03821c4f61099433610510565b9283926109a060405190565b918291349083610337565b0390a27fd7243f6f8212d5188fd054141cf6ea89cfc0d91facb8c3afe2f88a13584801426109d860405190565b34815280602081015b0390a2565b6106d9919033610cd6565b156109f857565b60405162461bcd60e51b815260206004820152601a60248201527f496e73756666696369656e742055534446432062616c616e63650000000000006044820152606490fd5b15610a4457565b60405162461bcd60e51b815260206004820152601760248201527f496e73756666696369656e7420636f6c6c61746572616c0000000000000000006044820152606490fd5b9190820391821161075957565b6040513d6000823e3d90fd5b610ab6610aae33610808565b8211156109f1565b610aca610ac46103e861044c565b82610774565b610ae3610adb610792336006610519565b821115610a3d565b610b03610af1336006610519565b61095a83610afe836106e5565b610a89565b610b0d8233610ed3565b600080808084610b24610b1f33610510565b610510565b828215610b6f575bf115610b6a577fe5b754fb1abb7f01b499791d0b820ae3b6af3424ac1c59768edb53f4ec31a92990610b5d33610510565b926109e161037360405190565b610a96565b506108fc610b2c565b6101c491610b9361079292610b8b600090565b506001610519565b610519565b61021d90610ba4610db5565b610bae600061083c565b6001600160a01b0381166001600160a01b03831614610bd1575061021d90610e7f565b6108d290610bde60405190565b9182917f1e4fbdf7000000000000000000000000000000000000000000000000000000008352600483016001600160a01b03909116815260200190565b61021d90610b98565b9160019161021d93610f11565b6001600160a01b03909116815260608101939261021d92909160409161034a906020830152565b91610c638284610b78565b6000198110610c73575b50505050565b818110610c995791610c8a610c9094926000940390565b91610f11565b38808080610c6d565b826108d283610ca760405190565b9384937ffb8f41b200000000000000000000000000000000000000000000000000000000855260048501610c31565b929190610ce3600061083c565b936001600160a01b0385166001600160a01b03821614610d6b576001600160a01b0385166001600160a01b03831614610d215761021d939450611046565b6108d285610d2e60405190565b9182917fec442f05000000000000000000000000000000000000000000000000000000008352600483016001600160a01b03909116815260200190565b6108d285610d7860405190565b9182917f96c6fd1e000000000000000000000000000000000000000000000000000000008352600483016001600160a01b03909116815260200190565b610dbd610872565b339081906001600160a01b031603610dd25750565b6108d290610ddf60405190565b9182917f118cdaa7000000000000000000000000000000000000000000000000000000008352600483016001600160a01b03909116815260200190565b9190610e28600061083c565b926001600160a01b0384166001600160a01b03821614610e4c5761021d9293611046565b6108d284610d2e60405190565b906001600160a01b03906108e9565b90610e786101c461090a92610510565b8254610e59565b610ea0610e9a610e8f6005610868565b610b1f846005610e68565b91610510565b907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0610ecb60405190565b80805b0390a3565b9190610edf600061083c565b926001600160a01b0384166001600160a01b03821614610f04579261021d9293611046565b6108d284610d7860405190565b909192610f1e600061083c565b6001600160a01b0381166001600160a01b03841614610ffc576001600160a01b0381166001600160a01b03851614610fb25750610f6984610f6485610b93866001610519565b6108f3565b610f7257505050565b610ece610fa8610fa27f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92593610510565b93610510565b936102a260405190565b6108d290610fbf60405190565b9182917f94280d62000000000000000000000000000000000000000000000000000000008352600483016001600160a01b03909116815260200190565b6108d29061100960405190565b9182917fe602df05000000000000000000000000000000000000000000000000000000008352600483016001600160a01b03909116815260200190565b8160006110528161083c565b6001600160a01b0381166001600160a01b038516036110f9577fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef93610ece93610fa8936110b9610fa2946101f26110b28c6110ad60026106e5565b6108d6565b60026108f3565b6001600160a01b038316036110df575050610b1f6110b2886110db60026106e5565b0390565b610b1f916110ec91610519565b61095a896101af836106e5565b9091506111096107928484610519565b858110611157577fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9385610ece946110b9610fa8956101f261114d8c610fa2980390565b610f648786610519565b836108d28761116560405190565b9384937fe450d38c00000000000000000000000000000000000000000000000000000000855260048501610c3156fea26469706673582212209c182ce2b3b74269d2f55dc529cd1a8715ea484bf8e7ed9f052303721c6cc12a64736f6c63430008180033ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef",
  "deployedBytecode": "0x60806040526004361015610023575b361561001957600080fd5b61002161090e565b005b60003560e01c806306fdde0314610143578063095ea7b31461013e57806318160ddd1461013957806323b872dd14610134578063313ce5671461012f578063333522101461012a57806340c10f191461012557806370a0823114610120578063715018a61461011b5780638da5cb5b1461011657806395d89b41146101115780639ee671721461010c578063a9059cbb14610107578063d9e69a0514610102578063db006a75146100fd578063dd62ed3e146100f8578063edc7d04f146100f35763f2fde38b0361000e57610577565b61055c565b6104d5565b61049a565b61046b565b610430565b61041d565b610402565b6103cd565b6103b5565b61039a565b61037c565b61034e565b6102f4565b6102d8565b610283565b610255565b6101c7565b600091031261015357565b600080fd5b60005b83811061016b5750506000910152565b818101518382015260200161015b565b61019c6101a56020936101af93610190815190565b80835293849260200190565b95869101610158565b601f01601f191690565b0190565b60208082526101c49291019061017b565b90565b34610153576101d7366004610148565b6101ee6101e26106c4565b604051918291826101b3565b0390f35b6001600160a01b031690565b6001600160a01b0381165b0361015357565b9050359061021d826101fe565b565b80610209565b9050359061021d8261021f565b9190604083820312610153576101c490602061024e8286610210565b9401610225565b34610153576101ee61027161026b366004610232565b906106ce565b60405191829182901515815260200190565b3461015357610293366004610148565b6101ee61029e6106ef565b6040515b9182918290815260200190565b9091606082840312610153576101c46102c88484610210565b93604061024e8260208701610210565b34610153576101ee6102716102ee3660046102af565b916106f9565b3461015357610304366004610148565b6101ee61030f610726565b6040519182918260ff909116815260200190565b90602082820312610153576101c491610210565b90815260408101929161021d9160200152565b0152565b3461015357610366610361366004610323565b610783565b906101ee61037360405190565b92839283610337565b346101535761039561038f366004610232565b906107fe565b604051005b34610153576101ee61029e6103b0366004610323565b610808565b34610153576103c5366004610148565b610395610857565b34610153576103dd366004610148565b6101ee6103e8610872565b604051918291826001600160a01b03909116815260200190565b3461015357610412366004610148565b6101ee6101e261087c565b610428366004610148565b61039561090e565b34610153576101ee610271610446366004610232565b906109e6565b6101c46101c46101c49290565b6101c4606e61044c565b6101c4610459565b346101535761047b366004610148565b6101ee61029e610463565b90602082820312610153576101c491610225565b34610153576103956104ad366004610486565b610aa2565b9190604083820312610153576101c49060206104ce8286610210565b9401610210565b34610153576101ee61029e6104eb3660046104b2565b90610b78565b6101f26101c46101c4926001600160a01b031690565b6101c4906104f1565b6101c490610507565b9061052390610510565b600052602052604060002090565b6101c4916008021c81565b906101c49154610531565b60006105576101c4926006610519565b61053c565b34610153576101ee61029e610572366004610323565b610547565b346101535761039561058a366004610323565b610c1b565b634e487b7160e01b600052602260045260246000fd5b90600160028304921680156105c5575b60208310146105c057565b61058f565b91607f16916105b5565b805460009392916105ec6105e2836105a5565b8085529360200190565b916001811690811561063e575060011461060557505050565b6106189192939450600052602060002090565b916000925b81841061062a5750500190565b80548484015260209093019260010161061d565b92949550505060ff1916825215156020020190565b906101c4916105cf565b634e487b7160e01b600052604160045260246000fd5b90601f01601f1916810190811067ffffffffffffffff82111761069557604052565b61065d565b9061021d6106b4926106ab60405190565b93848092610653565b0383610673565b6101c49061069a565b6101c460036106bb565b6106d9919033610c24565b600190565b6101c49081565b6101c490546106de565b6101c460026106e5565b6106d992919061070a833383610c58565b610cd6565b6101c49060a01c60ff1690565b6101c4905461070f565b6101c4600561071c565b634e487b7160e01b600052601160045260246000fd5b8181029291811591840414171561075957565b610730565b634e487b7160e01b600052601260045260246000fd5b811561077e570490565b61075e565b90610797610792836006610519565b6106e5565b6107a18193610808565b6107ab600061044c565b81036107bd5750506101c4600061044c565b6107e26107d86101c4936107d26103e861044c565b90610746565b6107d2606461044c565b610774565b9061021d916107f4610db5565b9061021d91610e1c565b9061021d916107e7565b6107926101c491610817600090565b506000610519565b610827610db5565b61021d610845565b6101f26101c46101c49290565b6101c49061082f565b61021d610852600061083c565b610e7f565b61021d61081f565b6101c4906101f2565b6101c4905461085f565b6101c46005610868565b6101c460046106bb565b1561088d57565b60405162461bcd60e51b815260206004820152601b60248201527f4d7573742073656e642046494c20617320636f6c6c61746572616c00000000006044820152606490fd5b0390fd5b9190820180921161075957565b90600019905b9181191691161790565b906109036101c461090a9261044c565b82546108e3565b9055565b61092261091b600061044c565b3411610886565b6109ab6109396109336103e861044c565b34610746565b610960610947336006610519565b61095a610953826106e5565b34906108d6565b906108f3565b61096a8133610e1c565b7f4c209b5fc8ad50758f13e2e1088ba56a560dff690a1c6fef26394f4c03821c4f61099433610510565b9283926109a060405190565b918291349083610337565b0390a27fd7243f6f8212d5188fd054141cf6ea89cfc0d91facb8c3afe2f88a13584801426109d860405190565b34815280602081015b0390a2565b6106d9919033610cd6565b156109f857565b60405162461bcd60e51b815260206004820152601a60248201527f496e73756666696369656e742055534446432062616c616e63650000000000006044820152606490fd5b15610a4457565b60405162461bcd60e51b815260206004820152601760248201527f496e73756666696369656e7420636f6c6c61746572616c0000000000000000006044820152606490fd5b9190820391821161075957565b6040513d6000823e3d90fd5b610ab6610aae33610808565b8211156109f1565b610aca610ac46103e861044c565b82610774565b610ae3610adb610792336006610519565b821115610a3d565b610b03610af1336006610519565b61095a83610afe836106e5565b610a89565b610b0d8233610ed3565b600080808084610b24610b1f33610510565b610510565b828215610b6f575bf115610b6a577fe5b754fb1abb7f01b499791d0b820ae3b6af3424ac1c59768edb53f4ec31a92990610b5d33610510565b926109e161037360405190565b610a96565b506108fc610b2c565b6101c491610b9361079292610b8b600090565b506001610519565b610519565b61021d90610ba4610db5565b610bae600061083c565b6001600160a01b0381166001600160a01b03831614610bd1575061021d90610e7f565b6108d290610bde60405190565b9182917f1e4fbdf7000000000000000000000000000000000000000000000000000000008352600483016001600160a01b03909116815260200190565b61021d90610b98565b9160019161021d93610f11565b6001600160a01b03909116815260608101939261021d92909160409161034a906020830152565b91610c638284610b78565b6000198110610c73575b50505050565b818110610c995791610c8a610c9094926000940390565b91610f11565b38808080610c6d565b826108d283610ca760405190565b9384937ffb8f41b200000000000000000000000000000000000000000000000000000000855260048501610c31565b929190610ce3600061083c565b936001600160a01b0385166001600160a01b03821614610d6b576001600160a01b0385166001600160a01b03831614610d215761021d939450611046565b6108d285610d2e60405190565b9182917fec442f05000000000000000000000000000000000000000000000000000000008352600483016001600160a01b03909116815260200190565b6108d285610d7860405190565b9182917f96c6fd1e000000000000000000000000000000000000000000000000000000008352600483016001600160a01b03909116815260200190565b610dbd610872565b339081906001600160a01b031603610dd25750565b6108d290610ddf60405190565b9182917f118cdaa7000000000000000000000000000000000000000000000000000000008352600483016001600160a01b03909116815260200190565b9190610e28600061083c565b926001600160a01b0384166001600160a01b03821614610e4c5761021d9293611046565b6108d284610d2e60405190565b906001600160a01b03906108e9565b90610e786101c461090a92610510565b8254610e59565b610ea0610e9a610e8f6005610868565b610b1f846005610e68565b91610510565b907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0610ecb60405190565b80805b0390a3565b9190610edf600061083c565b926001600160a01b0384166001600160a01b03821614610f04579261021d9293611046565b6108d284610d7860405190565b909192610f1e600061083c565b6001600160a01b0381166001600160a01b03841614610ffc576001600160a01b0381166001600160a01b03851614610fb25750610f6984610f6485610b93866001610519565b6108f3565b610f7257505050565b610ece610fa8610fa27f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92593610510565b93610510565b936102a260405190565b6108d290610fbf60405190565b9182917f94280d62000000000000000000000000000000000000000000000000000000008352600483016001600160a01b03909116815260200190565b6108d29061100960405190565b9182917fe602df05000000000000000000000000000000000000000000000000000000008352600483016001600160a01b03909116815260200190565b8160006110528161083c565b6001600160a01b0381166001600160a01b038516036110f9577fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef93610ece93610fa8936110b9610fa2946101f26110b28c6110ad60026106e5565b6108d6565b60026108f3565b6001600160a01b038316036110df575050610b1f6110b2886110db60026106e5565b0390565b610b1f916110ec91610519565b61095a896101af836106e5565b9091506111096107928484610519565b858110611157577fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9385610ece946110b9610fa8956101f261114d8c610fa2980390565b610f648786610519565b836108d28761116560405190565b9384937fe450d38c00000000000000000000000000000000000000000000000000000000855260048501610c3156fea26469706673582212209c182ce2b3b74269d2f55dc529cd1a8715ea484bf8e7ed9f052303721c6cc12a64736f6c63430008180033",
  "devdoc": {
    "details": "Mock USDFC token for testing VerifiAI marketplace",
    "errors": {
      "ERC20InsufficientAllowance(address,uint256,uint256)": [
        {
          "details": "Indicates a failure with the `spender`’s `allowance`. Used in transfers.",
          "params": {
            "allowance": "Amount of tokens a `spender` is allowed to operate with.",
            "needed": "Minimum amount required to perform a transfer.",
            "spender": "Address that may be allowed to operate on tokens without being their owner."
          }
        }
      ],
      "ERC20InsufficientBalance(address,uint256,uint256)": [
        {
          "details": "Indicates an error related to the current `balance` of a `sender`. Used in transfers.",
          "params": {
            "balance": "Current balance for the interacting account.",
            "needed": "Minimum amount required to perform a transfer.",
            "sender": "Address whose tokens are being transferred."
          }
        }
      ],
      "ERC20InvalidApprover(address)": [
        {
          "details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
          "params": {
            "approver": "Address initiating an approval operation."
          }
        }
      ],
      "ERC20InvalidReceiver(address)": [
        {
          "details": "Indicates a failure with the token `receiver`. Used in transfers.",
          "params": {
            "receiver": "Address to which tokens are being transferred."
          }
        }
      ],
      "ERC20InvalidSender(address)": [
        {
          "details": "Indicates a failure with the token `sender`. Used in transfers.",
          "params": {
            "sender": "Address whose tokens are being transferred."
          }
        }
      ],
      "ERC20InvalidSpender(address)": [
        {
          "details": "Indicates a failure with the `spender` to be approved. Used in approvals.",
          "params": {
            "spender": "Address that may be allowed to operate on tokens without being their owner."
          }
        }
      ],
      "OwnableInvalidOwner(address)": [
        {
          "details": "The owner is not a valid owner account. (eg. `address(0)`)"
        }
      ],
      "OwnableUnauthorizedAccount(address)": [
        {
          "details": "The caller account is not authorized to perform an operation."
        }
      ]
    },
    "events": {
      "Approval(address,address,uint256)": {
        "details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
      },
      "Transfer(address,address,uint256)": {
        "details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
      }
    },
    "kind": "dev",
    "methods": {
      "allowance(address,address)": {
        "details": "See {IERC20-allowance}."
      },
      "approve(address,uint256)": {
        "details": "See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address."
      },
      "balanceOf(address)": {
        "details": "See {IERC20-balanceOf}."
      },
      "decimals()": {
        "details": "Returns the number of decimals (18 like real USDFC)"
      },
      "getCollateralInfo(address)": {
        "details": "Get user's collateral info",
        "params": {
          "user": "User address"
        },
        "returns": {
          "collateralRatio": "Current collateral ratio percentage",
          "depositedCollateral": "Amount of FIL deposited as collateral"
        }
      },
      "mint(address,uint256)": {
        "details": "Mint tokens directly (only owner, for testing purposes)",
        "params": {
          "amount": "Amount to mint",
          "to": "Address to mint tokens to"
        }
      },
      "mintWithCollateral()": {
        "details": "Mint USDFC by depositing FIL as collateral (mock version)"
      },
      "name()": {
        "details": "Returns the name of the token."
      },
      "owner()": {
        "details": "Returns the address of the current owner."
      },
      "redeem(uint256)": {
        "details": "Redeem USDFC for FIL collateral",
        "params": {
          "amount": "Amount of USDFC to redeem"
        }
      },
      "renounceOwnership()": {
        "details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner."
      },
      "symbol()": {
        "details": "Returns the symbol of the token, usually a shorter version of the name."
      },
      "totalSupply()": {
        "details": "See {IERC20-totalSupply}."
      },
      "transfer(address,uint256)": {
        "details": "See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`."
      },
      "transferFrom(address,address,uint256)": {
        "details": "See {IERC20-transferFrom}. Skips emitting an {Approval} event indicating an allowance update. This is not required by the ERC. See {xref-ERC20-_approve-address-address-uint256-bool-}[_approve]. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`."
      },
      "transferOwnership(address)": {
        "details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
      }
    },
    "title": "USDFC - Mock USD Filecoin for Calibration Testnet",
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {
      "mintWithCollateral()": {
        "notice": "For testing: 1000 USDFC per FIL (0.1 FIL = 100 USDFC)"
      }
    },
    "notice": "Based on the real USDFC by Secured Finance, this is a testnet version",
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 307,
        "contract": "contracts/USDFC.sol:USDFC",
        "label": "_balances",
        "offset": 0,
        "slot": "0",
        "type": "t_mapping(t_address,t_uint256)"
      },
      {
        "astId": 313,
        "contract": "contracts/USDFC.sol:USDFC",
        "label": "_allowances",
        "offset": 0,
        "slot": "1",
        "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))"
      },
      {
        "astId": 315,
        "contract": "contracts/USDFC.sol:USDFC",
        "label": "_totalSupply",
        "offset": 0,
        "slot": "2",
        "type": "t_uint256"
      },
      {
        "astId": 317,
        "contract": "contracts/USDFC.sol:USDFC",
        "label": "_name",
        "offset": 0,
        "slot": "3",
        "type": "t_string_storage"
      },
      {
        "astId": 319,
        "contract": "contracts/USDFC.sol:USDFC",
        "label": "_symbol",
        "offset": 0,
        "slot": "4",
        "type": "t_string_storage"
      },
      {
        "astId": 8,
        "contract": "contracts/USDFC.sol:USDFC",
        "label": "_owner",
        "offset": 0,
        "slot": "5",
        "type": "t_address"
      },
      {
        "astId": 945,
        "contract": "contracts/USDFC.sol:USDFC",
        "label": "_decimals",
        "offset": 20,
        "slot": "5",
        "type": "t_uint8"
      },
      {
        "astId": 974,
        "contract": "contracts/USDFC.sol:USDFC",
        "label": "collateralDeposits",
        "offset": 0,
        "slot": "6",
        "type": "t_mapping(t_address,t_uint256)"
      }
    ],
    "types": {
      "t_address": {
        "encoding": "inplace",
        "label": "address",
        "numberOfBytes": "20"
      },
      "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => mapping(address => uint256))",
        "numberOfBytes": "32",
        "value": "t_mapping(t_address,t_uint256)"
      },
      "t_mapping(t_address,t_uint256)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => uint256)",
        "numberOfBytes": "32",
        "value": "t_uint256"
      },
      "t_string_storage": {
        "encoding": "bytes",
        "label": "string",
        "numberOfBytes": "32"
      },
      "t_uint256": {
        "encoding": "inplace",
        "label": "uint256",
        "numberOfBytes": "32"
      },
      "t_uint8": {
        "encoding": "inplace",
        "label": "uint8",
        "numberOfBytes": "1"
      }
    }
  }
}