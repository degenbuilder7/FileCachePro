{
  "address": "0xb994dFecA893A8248e37a33ABdC9bC67f7f0322d",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_usdfc",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_treasury",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_providerStakeAmount",
          "type": "uint256"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        }
      ],
      "name": "OwnableInvalidOwner",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "OwnableUnauthorizedAccount",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "ReentrancyGuardReentrantCall",
      "type": "error"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "datasetId",
          "type": "uint256"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "provider",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "pricePerBatch",
          "type": "uint256"
        }
      ],
      "name": "DatasetListed",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "purchaseId",
          "type": "uint256"
        },
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "datasetId",
          "type": "uint256"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "buyer",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "DatasetPurchased",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "provider",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "ProviderStaked",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "provider",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "ProviderUnstaked",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "datasetCounter",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "datasets",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "id",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "provider",
          "type": "address"
        },
        {
          "internalType": "string",
          "name": "metadataUri",
          "type": "string"
        },
        {
          "internalType": "uint256",
          "name": "pricePerBatch",
          "type": "uint256"
        },
        {
          "internalType": "uint64",
          "name": "filecoinDealId",
          "type": "uint64"
        },
        {
          "internalType": "bool",
          "name": "isActive",
          "type": "bool"
        },
        {
          "internalType": "uint256",
          "name": "totalSales",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "datasetId",
          "type": "uint256"
        }
      ],
      "name": "getDataset",
      "outputs": [
        {
          "components": [
            {
              "internalType": "uint256",
              "name": "id",
              "type": "uint256"
            },
            {
              "internalType": "address",
              "name": "provider",
              "type": "address"
            },
            {
              "internalType": "string",
              "name": "metadataUri",
              "type": "string"
            },
            {
              "internalType": "uint256",
              "name": "pricePerBatch",
              "type": "uint256"
            },
            {
              "internalType": "uint64",
              "name": "filecoinDealId",
              "type": "uint64"
            },
            {
              "internalType": "bool",
              "name": "isActive",
              "type": "bool"
            },
            {
              "internalType": "uint256",
              "name": "totalSales",
              "type": "uint256"
            }
          ],
          "internalType": "struct VerifiAIMarketplace.Dataset",
          "name": "",
          "type": "tuple"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "purchaseId",
          "type": "uint256"
        }
      ],
      "name": "getPurchase",
      "outputs": [
        {
          "components": [
            {
              "internalType": "uint256",
              "name": "id",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "datasetId",
              "type": "uint256"
            },
            {
              "internalType": "address",
              "name": "buyer",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "timestamp",
              "type": "uint256"
            },
            {
              "internalType": "bool",
              "name": "isVerified",
              "type": "bool"
            }
          ],
          "internalType": "struct VerifiAIMarketplace.Purchase",
          "name": "",
          "type": "tuple"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "datasetId",
          "type": "uint256"
        }
      ],
      "name": "isDatasetDealActive",
      "outputs": [
        {
          "internalType": "bool",
          "name": "isActive",
          "type": "bool"
        },
        {
          "internalType": "uint64",
          "name": "dealId",
          "type": "uint64"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "metadataUri",
          "type": "string"
        },
        {
          "internalType": "uint256",
          "name": "pricePerBatch",
          "type": "uint256"
        },
        {
          "internalType": "uint64",
          "name": "filecoinDealId",
          "type": "uint64"
        }
      ],
      "name": "listDataset",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "platformFeeRate",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "providerStakeAmount",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "providerStakes",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "purchaseCounter",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "datasetId",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "batchCount",
          "type": "uint256"
        }
      ],
      "name": "purchaseData",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "purchases",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "id",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "datasetId",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "buyer",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "timestamp",
          "type": "uint256"
        },
        {
          "internalType": "bool",
          "name": "isVerified",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "renounceOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "stakeAsProvider",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "treasury",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "newFeeRate",
          "type": "uint256"
        }
      ],
      "name": "updatePlatformFeeRate",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "newStakeAmount",
          "type": "uint256"
        }
      ],
      "name": "updateProviderStakeAmount",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "usdfc",
      "outputs": [
        {
          "internalType": "contract IERC20",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    }
  ],
  "transactionHash": "0xaa584a28901b400d0afbc092233af40071c02764112808430bd8830864d88f8d",
  "receipt": {
    "to": null,
    "from": "0x268d62aba7C42fCB4D72A83137DB503935f764fF",
    "contractAddress": "0xb994dFecA893A8248e37a33ABdC9bC67f7f0322d",
    "transactionIndex": 0,
    "gasUsed": "76390826",
    "logsBloom": "0x
    "blockHash": "0xb9fb39f2ca2b05c5de78e96b68e3cd30525a7a662e7fdadbaa04d345ae701915",
    "transactionHash": "0xaa584a28901b400d0afbc092233af40071c02764112808430bd8830864d88f8d",
    "logs": [
      {
        "transactionIndex": 0,
        "blockNumber": 2816902,
        "transactionHash": "0xaa584a28901b400d0afbc092233af40071c02764112808430bd8830864d88f8d",
        "address": "0xb994dFecA893A8248e37a33ABdC9bC67f7f0322d",
        "topics": [
          "0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0",
          "0x0000000000000000000000000000000000000000000000000000000000000000",
          "0x000000000000000000000000268d62aba7c42fcb4d72a83137db503935f764ff"
        ],
        "data": "0x",
        "logIndex": 0,
        "blockHash": "0xb9fb39f2ca2b05c5de78e96b68e3cd30525a7a662e7fdadbaa04d345ae701915"
      }
    ],
    "blockNumber": 2816902,
    "cumulativeGasUsed": "0",
    "status": 1,
    "byzantium": true
  },
  "args": [
    "0x0f703F65596731cFc036cE4eb2acEF37B9169a6e",
    "0x268d62aba7C42fCB4D72A83137DB503935f764fF",
    "100000000000000000000"
  ],
  "numDeployments": 1,
  "solcInputHash": "9e64ae3f474ffb89e119af793cdcef3a",
  "metadata": "{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_usdfc\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_treasury\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_providerStakeAmount\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"OwnableInvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"OwnableUnauthorizedAccount\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ReentrancyGuardReentrantCall\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"datasetId\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"provider\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"pricePerBatch\",\"type\":\"uint256\"}],\"name\":\"DatasetListed\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"purchaseId\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"datasetId\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"buyer\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"DatasetPurchased\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"provider\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"ProviderStaked\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"provider\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"ProviderUnstaked\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"datasetCounter\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"datasets\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"provider\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"metadataUri\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"pricePerBatch\",\"type\":\"uint256\"},{\"internalType\":\"uint64\",\"name\":\"filecoinDealId\",\"type\":\"uint64\"},{\"internalType\":\"bool\",\"name\":\"isActive\",\"type\":\"bool\"},{\"internalType\":\"uint256\",\"name\":\"totalSales\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"datasetId\",\"type\":\"uint256\"}],\"name\":\"getDataset\",\"outputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"provider\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"metadataUri\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"pricePerBatch\",\"type\":\"uint256\"},{\"internalType\":\"uint64\",\"name\":\"filecoinDealId\",\"type\":\"uint64\"},{\"internalType\":\"bool\",\"name\":\"isActive\",\"type\":\"bool\"},{\"internalType\":\"uint256\",\"name\":\"totalSales\",\"type\":\"uint256\"}],\"internalType\":\"struct VerifiAIMarketplace.Dataset\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"purchaseId\",\"type\":\"uint256\"}],\"name\":\"getPurchase\",\"outputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"datasetId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"buyer\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"isVerified\",\"type\":\"bool\"}],\"internalType\":\"struct VerifiAIMarketplace.Purchase\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"datasetId\",\"type\":\"uint256\"}],\"name\":\"isDatasetDealActive\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"isActive\",\"type\":\"bool\"},{\"internalType\":\"uint64\",\"name\":\"dealId\",\"type\":\"uint64\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"metadataUri\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"pricePerBatch\",\"type\":\"uint256\"},{\"internalType\":\"uint64\",\"name\":\"filecoinDealId\",\"type\":\"uint64\"}],\"name\":\"listDataset\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"platformFeeRate\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"providerStakeAmount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"providerStakes\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"purchaseCounter\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"datasetId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"batchCount\",\"type\":\"uint256\"}],\"name\":\"purchaseData\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"purchases\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"datasetId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"buyer\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"isVerified\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"stakeAsProvider\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"treasury\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"newFeeRate\",\"type\":\"uint256\"}],\"name\":\"updatePlatformFeeRate\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"newStakeAmount\",\"type\":\"uint256\"}],\"name\":\"updateProviderStakeAmount\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"usdfc\",\"outputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Minimized core version to avoid Yul stack depth issues\",\"errors\":{\"OwnableInvalidOwner(address)\":[{\"details\":\"The owner is not a valid owner account. (eg. `address(0)`)\"}],\"OwnableUnauthorizedAccount(address)\":[{\"details\":\"The caller account is not authorized to perform an operation.\"}],\"ReentrancyGuardReentrantCall()\":[{\"details\":\"Unauthorized reentrant call.\"}]},\"kind\":\"dev\",\"methods\":{\"constructor\":{\"params\":{\"_providerStakeAmount\":\"Minimum provider stake amount\",\"_treasury\":\"Treasury address\",\"_usdfc\":\"USDFC token address\"}},\"getDataset(uint256)\":{\"params\":{\"datasetId\":\"Dataset ID\"},\"returns\":{\"_0\":\"Dataset information\"}},\"getPurchase(uint256)\":{\"params\":{\"purchaseId\":\"Purchase ID\"},\"returns\":{\"_0\":\"Purchase information\"}},\"isDatasetDealActive(uint256)\":{\"params\":{\"datasetId\":\"Dataset ID\"},\"returns\":{\"dealId\":\"The Filecoin deal ID (0 if no deal)\",\"isActive\":\"Whether the deal is active (basic check: deal ID exists)\"}},\"listDataset(string,uint256,uint64)\":{\"params\":{\"filecoinDealId\":\"Associated Filecoin deal ID (optional)\",\"metadataUri\":\"IPFS URI for dataset metadata\",\"pricePerBatch\":\"Price per training batch in USDFC\"}},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"purchaseData(uint256,uint256)\":{\"params\":{\"batchCount\":\"Number of batches to purchase\",\"datasetId\":\"Dataset to purchase\"}},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"stakeAsProvider(uint256)\":{\"params\":{\"amount\":\"Amount to stake\"}},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"},\"updatePlatformFeeRate(uint256)\":{\"params\":{\"newFeeRate\":\"New fee rate in basis points\"}},\"updateProviderStakeAmount(uint256)\":{\"params\":{\"newStakeAmount\":\"New minimum stake amount\"}}},\"title\":\"VerifiAIMarketplace\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"constructor\":{\"notice\":\"Constructor\"},\"datasetCounter()\":{\"notice\":\"Current dataset ID counter\"},\"datasets(uint256)\":{\"notice\":\"Mapping from dataset ID to dataset info\"},\"getDataset(uint256)\":{\"notice\":\"Get dataset information\"},\"getPurchase(uint256)\":{\"notice\":\"Get purchase information\"},\"isDatasetDealActive(uint256)\":{\"notice\":\"Check if a dataset has an active Filecoin deal\"},\"listDataset(string,uint256,uint64)\":{\"notice\":\"List a new dataset for sale\"},\"platformFeeRate()\":{\"notice\":\"Platform fee (in basis points, 250 = 2.5%)\"},\"providerStakeAmount()\":{\"notice\":\"Minimum stake amount for providers\"},\"providerStakes(address)\":{\"notice\":\"Provider stakes\"},\"purchaseCounter()\":{\"notice\":\"Purchase counter\"},\"purchaseData(uint256,uint256)\":{\"notice\":\"Purchase training data\"},\"purchases(uint256)\":{\"notice\":\"Mapping from purchase ID to purchase info\"},\"stakeAsProvider(uint256)\":{\"notice\":\"Stake USDFC to become a data provider\"},\"treasury()\":{\"notice\":\"Treasury address for fees\"},\"updatePlatformFeeRate(uint256)\":{\"notice\":\"Update platform fee rate (owner only)\"},\"updateProviderStakeAmount(uint256)\":{\"notice\":\"Update provider stake requirement (owner only)\"},\"usdfc()\":{\"notice\":\"USDFC token contract for payments\"}},\"notice\":\"Verifiable AI Training Data Marketplace for Protocol Labs Genesis Hackathon 2025\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/VerifiAIMarketplace.sol\":\"VerifiAIMarketplace\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"details\":{\"constantOptimizer\":true,\"cse\":true,\"deduplicate\":true,\"inliner\":true,\"jumpdestRemover\":true,\"orderLiterals\":true,\"peephole\":true,\"simpleCounterForLoopUncheckedIncrement\":true,\"yul\":true,\"yulDetails\":{\"optimizerSteps\":\"dhfoDgvulfnTUtnIf:fDnTOcmu\",\"stackAllocation\":true}},\"runs\":1000},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (access/Ownable.sol)\\n\\npragma solidity ^0.8.20;\\n\\nimport {Context} from \\\"../utils/Context.sol\\\";\\n\\n/**\\n * @dev Contract module which provides a basic access control mechanism, where\\n * there is an account (an owner) that can be granted exclusive access to\\n * specific functions.\\n *\\n * The initial owner is set to the address provided by the deployer. This can\\n * later be changed with {transferOwnership}.\\n *\\n * This module is used through inheritance. It will make available the modifier\\n * `onlyOwner`, which can be applied to your functions to restrict their use to\\n * the owner.\\n */\\nabstract contract Ownable is Context {\\n    address private _owner;\\n\\n    /**\\n     * @dev The caller account is not authorized to perform an operation.\\n     */\\n    error OwnableUnauthorizedAccount(address account);\\n\\n    /**\\n     * @dev The owner is not a valid owner account. (eg. `address(0)`)\\n     */\\n    error OwnableInvalidOwner(address owner);\\n\\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\\n\\n    /**\\n     * @dev Initializes the contract setting the address provided by the deployer as the initial owner.\\n     */\\n    constructor(address initialOwner) {\\n        if (initialOwner == address(0)) {\\n            revert OwnableInvalidOwner(address(0));\\n        }\\n        _transferOwnership(initialOwner);\\n    }\\n\\n    /**\\n     * @dev Throws if called by any account other than the owner.\\n     */\\n    modifier onlyOwner() {\\n        _checkOwner();\\n        _;\\n    }\\n\\n    /**\\n     * @dev Returns the address of the current owner.\\n     */\\n    function owner() public view virtual returns (address) {\\n        return _owner;\\n    }\\n\\n    /**\\n     * @dev Throws if the sender is not the owner.\\n     */\\n    function _checkOwner() internal view virtual {\\n        if (owner() != _msgSender()) {\\n            revert OwnableUnauthorizedAccount(_msgSender());\\n        }\\n    }\\n\\n    /**\\n     * @dev Leaves the contract without owner. It will not be possible to call\\n     * `onlyOwner` functions. Can only be called by the current owner.\\n     *\\n     * NOTE: Renouncing ownership will leave the contract without an owner,\\n     * thereby disabling any functionality that is only available to the owner.\\n     */\\n    function renounceOwnership() public virtual onlyOwner {\\n        _transferOwnership(address(0));\\n    }\\n\\n    /**\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\\n     * Can only be called by the current owner.\\n     */\\n    function transferOwnership(address newOwner) public virtual onlyOwner {\\n        if (newOwner == address(0)) {\\n            revert OwnableInvalidOwner(address(0));\\n        }\\n        _transferOwnership(newOwner);\\n    }\\n\\n    /**\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\\n     * Internal function without access restriction.\\n     */\\n    function _transferOwnership(address newOwner) internal virtual {\\n        address oldOwner = _owner;\\n        _owner = newOwner;\\n        emit OwnershipTransferred(oldOwner, newOwner);\\n    }\\n}\\n\",\"keccak256\":\"0xff6d0bb2e285473e5311d9d3caacb525ae3538a80758c10649a4d61029b017bb\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.1.0) (token/ERC20/IERC20.sol)\\n\\npragma solidity ^0.8.20;\\n\\n/**\\n * @dev Interface of the ERC-20 standard as defined in the ERC.\\n */\\ninterface IERC20 {\\n    /**\\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\\n     * another (`to`).\\n     *\\n     * Note that `value` may be zero.\\n     */\\n    event Transfer(address indexed from, address indexed to, uint256 value);\\n\\n    /**\\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\\n     * a call to {approve}. `value` is the new allowance.\\n     */\\n    event Approval(address indexed owner, address indexed spender, uint256 value);\\n\\n    /**\\n     * @dev Returns the value of tokens in existence.\\n     */\\n    function totalSupply() external view returns (uint256);\\n\\n    /**\\n     * @dev Returns the value of tokens owned by `account`.\\n     */\\n    function balanceOf(address account) external view returns (uint256);\\n\\n    /**\\n     * @dev Moves a `value` amount of tokens from the caller's account to `to`.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transfer(address to, uint256 value) external returns (bool);\\n\\n    /**\\n     * @dev Returns the remaining number of tokens that `spender` will be\\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\\n     * zero by default.\\n     *\\n     * This value changes when {approve} or {transferFrom} are called.\\n     */\\n    function allowance(address owner, address spender) external view returns (uint256);\\n\\n    /**\\n     * @dev Sets a `value` amount of tokens as the allowance of `spender` over the\\n     * caller's tokens.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\\n     * that someone may use both the old and the new allowance by unfortunate\\n     * transaction ordering. One possible solution to mitigate this race\\n     * condition is to first reduce the spender's allowance to 0 and set the\\n     * desired value afterwards:\\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\\n     *\\n     * Emits an {Approval} event.\\n     */\\n    function approve(address spender, uint256 value) external returns (bool);\\n\\n    /**\\n     * @dev Moves a `value` amount of tokens from `from` to `to` using the\\n     * allowance mechanism. `value` is then deducted from the caller's\\n     * allowance.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transferFrom(address from, address to, uint256 value) external returns (bool);\\n}\\n\",\"keccak256\":\"0xe06a3f08a987af6ad2e1c1e774405d4fe08f1694b67517438b467cecf0da0ef7\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/Context.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.1) (utils/Context.sol)\\n\\npragma solidity ^0.8.20;\\n\\n/**\\n * @dev Provides information about the current execution context, including the\\n * sender of the transaction and its data. While these are generally available\\n * via msg.sender and msg.data, they should not be accessed in such a direct\\n * manner, since when dealing with meta-transactions the account sending and\\n * paying for execution may not be the actual sender (as far as an application\\n * is concerned).\\n *\\n * This contract is only required for intermediate, library-like contracts.\\n */\\nabstract contract Context {\\n    function _msgSender() internal view virtual returns (address) {\\n        return msg.sender;\\n    }\\n\\n    function _msgData() internal view virtual returns (bytes calldata) {\\n        return msg.data;\\n    }\\n\\n    function _contextSuffixLength() internal view virtual returns (uint256) {\\n        return 0;\\n    }\\n}\\n\",\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/ReentrancyGuard.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.1.0) (utils/ReentrancyGuard.sol)\\n\\npragma solidity ^0.8.20;\\n\\n/**\\n * @dev Contract module that helps prevent reentrant calls to a function.\\n *\\n * Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier\\n * available, which can be applied to functions to make sure there are no nested\\n * (reentrant) calls to them.\\n *\\n * Note that because there is a single `nonReentrant` guard, functions marked as\\n * `nonReentrant` may not call one another. This can be worked around by making\\n * those functions `private`, and then adding `external` `nonReentrant` entry\\n * points to them.\\n *\\n * TIP: If EIP-1153 (transient storage) is available on the chain you're deploying at,\\n * consider using {ReentrancyGuardTransient} instead.\\n *\\n * TIP: If you would like to learn more about reentrancy and alternative ways\\n * to protect against it, check out our blog post\\n * https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul].\\n */\\nabstract contract ReentrancyGuard {\\n    // Booleans are more expensive than uint256 or any type that takes up a full\\n    // word because each write operation emits an extra SLOAD to first read the\\n    // slot's contents, replace the bits taken up by the boolean, and then write\\n    // back. This is the compiler's defense against contract upgrades and\\n    // pointer aliasing, and it cannot be disabled.\\n\\n    // The values being non-zero value makes deployment a bit more expensive,\\n    // but in exchange the refund on every call to nonReentrant will be lower in\\n    // amount. Since refunds are capped to a percentage of the total\\n    // transaction's gas, it is best to keep them low in cases like this one, to\\n    // increase the likelihood of the full refund coming into effect.\\n    uint256 private constant NOT_ENTERED = 1;\\n    uint256 private constant ENTERED = 2;\\n\\n    uint256 private _status;\\n\\n    /**\\n     * @dev Unauthorized reentrant call.\\n     */\\n    error ReentrancyGuardReentrantCall();\\n\\n    constructor() {\\n        _status = NOT_ENTERED;\\n    }\\n\\n    /**\\n     * @dev Prevents a contract from calling itself, directly or indirectly.\\n     * Calling a `nonReentrant` function from another `nonReentrant`\\n     * function is not supported. It is possible to prevent this from happening\\n     * by making the `nonReentrant` function external, and making it call a\\n     * `private` function that does the actual work.\\n     */\\n    modifier nonReentrant() {\\n        _nonReentrantBefore();\\n        _;\\n        _nonReentrantAfter();\\n    }\\n\\n    function _nonReentrantBefore() private {\\n        // On the first call to nonReentrant, _status will be NOT_ENTERED\\n        if (_status == ENTERED) {\\n            revert ReentrancyGuardReentrantCall();\\n        }\\n\\n        // Any calls to nonReentrant after this point will fail\\n        _status = ENTERED;\\n    }\\n\\n    function _nonReentrantAfter() private {\\n        // By storing the original value once again, a refund is triggered (see\\n        // https://eips.ethereum.org/EIPS/eip-2200)\\n        _status = NOT_ENTERED;\\n    }\\n\\n    /**\\n     * @dev Returns true if the reentrancy guard is currently set to \\\"entered\\\", which indicates there is a\\n     * `nonReentrant` function in the call stack.\\n     */\\n    function _reentrancyGuardEntered() internal view returns (bool) {\\n        return _status == ENTERED;\\n    }\\n}\\n\",\"keccak256\":\"0x11a5a79827df29e915a12740caf62fe21ebe27c08c9ae3e09abe9ee3ba3866d3\",\"license\":\"MIT\"},\"contracts/VerifiAIMarketplace.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.24;\\n\\nimport \\\"@openzeppelin/contracts/token/ERC20/IERC20.sol\\\";\\nimport \\\"@openzeppelin/contracts/access/Ownable.sol\\\";\\nimport \\\"@openzeppelin/contracts/utils/ReentrancyGuard.sol\\\";\\n\\n/**\\n * @title VerifiAIMarketplace\\n * @notice Verifiable AI Training Data Marketplace for Protocol Labs Genesis Hackathon 2025\\n * @dev Minimized core version to avoid Yul stack depth issues\\n */\\ncontract VerifiAIMarketplace is Ownable, ReentrancyGuard {\\n    \\n    /// @notice USDFC token contract for payments\\n    IERC20 public immutable usdfc;\\n    \\n    /// @notice Treasury address for fees\\n    address public treasury;\\n    \\n    /// @notice Minimum stake amount for providers\\n    uint256 public providerStakeAmount;\\n    \\n    /// @notice Current dataset ID counter\\n    uint256 public datasetCounter;\\n    \\n    /// @notice Dataset information\\n    struct Dataset {\\n        uint256 id;\\n        address provider;\\n        string metadataUri;\\n        uint256 pricePerBatch;\\n        uint64 filecoinDealId;\\n        bool isActive;\\n        uint256 totalSales;\\n    }\\n    \\n    /// @notice Purchase information\\n    struct Purchase {\\n        uint256 id;\\n        uint256 datasetId;\\n        address buyer;\\n        uint256 amount;\\n        uint256 timestamp;\\n        bool isVerified;\\n    }\\n    \\n    /// @notice Mapping from dataset ID to dataset info\\n    mapping(uint256 => Dataset) public datasets;\\n    \\n    /// @notice Mapping from purchase ID to purchase info\\n    mapping(uint256 => Purchase) public purchases;\\n    \\n    /// @notice Provider stakes\\n    mapping(address => uint256) public providerStakes;\\n    \\n    /// @notice Purchase counter\\n    uint256 public purchaseCounter;\\n    \\n    /// @notice Platform fee (in basis points, 250 = 2.5%)\\n    uint256 public platformFeeRate = 250;\\n    \\n    // Events\\n    event DatasetListed(\\n        uint256 indexed datasetId, \\n        address indexed provider, \\n        uint256 pricePerBatch\\n    );\\n    \\n    event DatasetPurchased(\\n        uint256 indexed purchaseId,\\n        uint256 indexed datasetId,\\n        address indexed buyer,\\n        uint256 amount\\n    );\\n    \\n    event ProviderStaked(address indexed provider, uint256 amount);\\n    event ProviderUnstaked(address indexed provider, uint256 amount);\\n    \\n    /**\\n     * @notice Constructor\\n     * @param _usdfc USDFC token address\\n     * @param _treasury Treasury address\\n     * @param _providerStakeAmount Minimum provider stake amount\\n     */\\n    constructor(\\n        address _usdfc,\\n        address _treasury,\\n        uint256 _providerStakeAmount\\n    ) Ownable(msg.sender) {\\n        require(_usdfc != address(0), \\\"Invalid USDFC address\\\");\\n        require(_treasury != address(0), \\\"Invalid treasury address\\\");\\n        \\n        usdfc = IERC20(_usdfc);\\n        treasury = _treasury;\\n        providerStakeAmount = _providerStakeAmount;\\n    }\\n    \\n    /// @notice Modifier to check if provider has sufficient stake\\n    modifier onlyStakedProvider() {\\n        require(providerStakes[msg.sender] >= providerStakeAmount, \\\"Insufficient stake\\\");\\n        _;\\n    }\\n    \\n    /// @notice Modifier to check valid dataset\\n    modifier validDataset(uint256 datasetId) {\\n        require(datasetId > 0 && datasetId <= datasetCounter, \\\"Invalid dataset ID\\\");\\n        require(datasets[datasetId].isActive, \\\"Dataset not active\\\");\\n        _;\\n    }\\n    \\n    /**\\n     * @notice Stake USDFC to become a data provider\\n     * @param amount Amount to stake\\n     */\\n    function stakeAsProvider(uint256 amount) external nonReentrant {\\n        require(amount >= providerStakeAmount, \\\"Insufficient stake amount\\\");\\n        \\n        usdfc.transferFrom(msg.sender, address(this), amount);\\n        providerStakes[msg.sender] += amount;\\n        \\n        emit ProviderStaked(msg.sender, amount);\\n    }\\n    \\n    /**\\n     * @notice List a new dataset for sale\\n     * @param metadataUri IPFS URI for dataset metadata\\n     * @param pricePerBatch Price per training batch in USDFC\\n     * @param filecoinDealId Associated Filecoin deal ID (optional)\\n     */\\n    function listDataset(\\n        string calldata metadataUri,\\n        uint256 pricePerBatch,\\n        uint64 filecoinDealId\\n    ) external onlyStakedProvider {\\n        require(bytes(metadataUri).length > 0, \\\"Invalid metadata URI\\\");\\n        require(pricePerBatch > 0, \\\"Invalid price\\\");\\n        \\n        datasetCounter++;\\n        \\n        datasets[datasetCounter] = Dataset({\\n            id: datasetCounter,\\n            provider: msg.sender,\\n            metadataUri: metadataUri,\\n            pricePerBatch: pricePerBatch,\\n            filecoinDealId: filecoinDealId,\\n            isActive: true,\\n            totalSales: 0\\n        });\\n        \\n        emit DatasetListed(datasetCounter, msg.sender, pricePerBatch);\\n    }\\n    \\n    /**\\n     * @notice Purchase training data\\n     * @param datasetId Dataset to purchase\\n     * @param batchCount Number of batches to purchase\\n     */\\n    function purchaseData(\\n        uint256 datasetId,\\n        uint256 batchCount\\n    ) external validDataset(datasetId) nonReentrant {\\n        require(batchCount > 0, \\\"Invalid batch count\\\");\\n        \\n        Dataset storage dataset = datasets[datasetId];\\n        uint256 totalAmount = dataset.pricePerBatch * batchCount;\\n        \\n        // Calculate platform fee\\n        uint256 platformFee = (totalAmount * platformFeeRate) / 10000;\\n        uint256 providerAmount = totalAmount - platformFee;\\n        \\n        // Transfer payment\\n        usdfc.transferFrom(msg.sender, treasury, platformFee);\\n        usdfc.transferFrom(msg.sender, dataset.provider, providerAmount);\\n        \\n        // Record purchase\\n        purchaseCounter++;\\n        purchases[purchaseCounter] = Purchase({\\n            id: purchaseCounter,\\n            datasetId: datasetId,\\n            buyer: msg.sender,\\n            amount: totalAmount,\\n            timestamp: block.timestamp,\\n            isVerified: false\\n        });\\n        \\n        // Update dataset stats\\n        dataset.totalSales += totalAmount;\\n        \\n        emit DatasetPurchased(purchaseCounter, datasetId, msg.sender, totalAmount);\\n    }\\n    \\n    /**\\n     * @notice Get dataset information\\n     * @param datasetId Dataset ID\\n     * @return Dataset information\\n     */\\n    function getDataset(uint256 datasetId) external view returns (Dataset memory) {\\n        require(datasetId > 0 && datasetId <= datasetCounter, \\\"Invalid dataset ID\\\");\\n        return datasets[datasetId];\\n    }\\n    \\n    /**\\n     * @notice Get purchase information\\n     * @param purchaseId Purchase ID\\n     * @return Purchase information\\n     */\\n    function getPurchase(uint256 purchaseId) external view returns (Purchase memory) {\\n        require(purchaseId > 0 && purchaseId <= purchaseCounter, \\\"Invalid purchase ID\\\");\\n        return purchases[purchaseId];\\n    }\\n    \\n    /**\\n     * @notice Check if a dataset has an active Filecoin deal\\n     * @param datasetId Dataset ID\\n     * @return isActive Whether the deal is active (basic check: deal ID exists)\\n     * @return dealId The Filecoin deal ID (0 if no deal)\\n     */\\n    function isDatasetDealActive(uint256 datasetId) \\n        external \\n        view\\n        validDataset(datasetId) \\n        returns (bool isActive, uint64 dealId) \\n    {\\n        dealId = datasets[datasetId].filecoinDealId;\\n        isActive = dealId > 0;\\n    }\\n    \\n    /**\\n     * @notice Update platform fee rate (owner only)\\n     * @param newFeeRate New fee rate in basis points\\n     */\\n    function updatePlatformFeeRate(uint256 newFeeRate) external onlyOwner {\\n        require(newFeeRate <= 1000, \\\"Fee rate too high\\\"); // Max 10%\\n        platformFeeRate = newFeeRate;\\n    }\\n    \\n    /**\\n     * @notice Update provider stake requirement (owner only)\\n     * @param newStakeAmount New minimum stake amount\\n     */\\n    function updateProviderStakeAmount(uint256 newStakeAmount) external onlyOwner {\\n        providerStakeAmount = newStakeAmount;\\n    }\\n} \",\"keccak256\":\"0x0cc78d51b83fccc1a9ec29d54f7c33e406954151b3b0d0656c77137db050b358\",\"license\":\"MIT\"}},\"version\":1}",
  "bytecode": "0x60a06040523462000048576200001f6200001862000122565b916200029b565b604051611dd36200042682396080518181816102bb0152818161147901526118540152611dd390f35b600080fd5b634e487b7160e01b600052604160045260246000fd5b90601f01601f191681019081106001600160401b038211176200008557604052565b6200004d565b90620000a26200009a60405190565b928362000063565b565b6001600160a01b031690565b90565b6001600160a01b0381165b036200004857565b90505190620000a282620000b3565b80620000be565b90505190620000a282620000d5565b90916060828403126200004857620000b0620001088484620000c6565b9360406200011a8260208701620000c6565b9401620000dc565b62000145620021f98038038062000139816200008b565b928339810190620000eb565b909192565b90600019905b9181191691161790565b620000b0620000b0620000b09290565b906200017e620000b062000186926200015a565b82546200014a565b9055565b620000a4620000b0620000b09290565b620000b0906200018a565b15620001ad57565b60405162461bcd60e51b815260206004820152601560248201527f496e76616c6964205553444643206164647265737300000000000000000000006044820152606490fd5b0390fd5b15620001fe57565b60405162461bcd60e51b815260206004820152601860248201527f496e76616c6964207472656173757279206164647265737300000000000000006044820152606490fd5b620000b090620000a4906001600160a01b031682565b620000b09062000243565b620000b09062000259565b906001600160a01b039062000150565b9062000293620000b0620001869262000264565b82546200026f565b620000a292916200030f6200031a92620002b5336200032e565b620002c360fa60096200016a565b62000309620002f7620002d760006200019a565b620000a46001600160a01b0382166001600160a01b0386161415620001a5565b6001600160a01b0385161415620001f6565b62000264565b60805260026200027f565b60036200016a565b620000b060016200015a565b62000339906200034f565b620000a26200034762000322565b60016200016a565b6200035b60006200019a565b6001600160a01b0381166001600160a01b03831614620003815750620000a290620003cb565b620001f2906200039060405190565b631e4fbdf760e01b8152918291600483016001600160a01b03909116815260200190565b620000b090620000a4565b620000b09054620003b4565b620003f3620003ec620003df6000620003bf565b620003098460006200027f565b9162000264565b907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e06200041f60405190565b600090a356fe6080604052600436101561001257600080fd5b60003560e01c8063055680f0146101525780630d6b4c9f1461014d5780631006e4cb146101485780631cff85e11461014357806334f910991461013e5780633742a9f71461013957806361d027b3146101345780636854d20f1461012f578063715018a61461012a5780638392fe31146101255780638da5cb5b14610120578063ae3b7f061461011b578063b33b492414610116578063b5126a6314610111578063b56a1e7d1461010c578063c34f294014610107578063ee00422114610102578063eeca08f0146100fd578063f09ce8f3146100f85763f2fde38b0361015757610aa8565b610a7a565b610a43565b610a10565b610976565b610952565b610939565b6108fe565b6108e6565b6108cb565b610897565b6107c8565b6107ad565b61077a565b61071f565b610698565b6105d0565b6102a2565b61026e565b610192565b600080fd5b600091031261015757565b610172916008021c81565b90565b906101729154610167565b61017260006008610175565b9052565b565b34610157576101a236600461015c565b6101be6101ad610180565b6040515b9182918290815260200190565b0390f35b73ffffffffffffffffffffffffffffffffffffffff1690565b6101e4816101c2565b0361015757565b90503590610190826101db565b9060208282031261015757610172916101eb565b6101c26101726101729273ffffffffffffffffffffffffffffffffffffffff1690565b6101729061020c565b6101729061022f565b9061024b90610238565b600052602052604060002090565b6000610269610172926007610241565b610175565b34610157576101be6101ad6102843660046101f8565b610259565b61018c90610238565b6020810192916101909190610289565b34610157576102b236600461015c565b604051806101be7f000000000000000000000000000000000000000000000000000000000000000082610292565b806101e4565b90503590610190826102e0565b9060208282031261015757610172916102e6565b6101726101726101729290565b9061024b90610307565b6101729081565b610172905461031e565b610172906101c2565b610172905461032f565b634e487b7160e01b600052602260045260246000fd5b9060016002830492168015610378575b602083101461037357565b610342565b91607f1691610368565b8054600093929161039f61039583610358565b8085529360200190565b91600181169081156103f157506001146103b857505050565b6103cb9192939450600052602060002090565b916000925b8184106103dd5750500190565b8054848401526020909301926001016103d0565b92949550505060ff1916825215156020020190565b9061017291610382565b634e487b7160e01b600052604160045260246000fd5b90601f01601f1916810190811067ffffffffffffffff82111761044857604052565b610410565b906101906104679261045e60405190565b93848092610406565b0383610426565b610172905b67ffffffffffffffff1690565b610172905461046e565b6101729060401c5b60ff1690565b610172905461048a565b6104ad906005610314565b6104b681610325565b916104c360018301610338565b916104d06002820161044d565b916104dd60038301610325565b916104ea60048201610480565b9161017260056104fc60048501610498565b9301610325565b61018c906101c2565b60005b83811061051f5750506000910152565b818101518382015260200161050f565b61055061055960209361056393610544815190565b80835293849260200190565b9586910161050c565b601f01601f191690565b0190565b9260c0949897956105b26105aa61019099946105c39461059d6105cc9861059360e08c019460008d0152565b60208b0190610503565b88820360408a015261052f565b9a6060870152565b67ffffffffffffffff166080850152565b151560a0830152565b0152565b34610157576101be6105eb6105e63660046102f3565b6104a2565b936105fb97959793919360405190565b97889788610567565b909182601f830112156101575781359167ffffffffffffffff831161015757602001926001830284011161015757565b67ffffffffffffffff81166101e4565b9050359061019082610634565b9190916060818403126101575780359167ffffffffffffffff83116101575761067f84610172948401610604565b939094604061069182602087016102e6565b9401610644565b34610157576106b46106ab366004610651565b92919091611111565b604051005b80518252610190919060a09081906106d660208201516020860152565b6106e860408201516040860190610503565b6106f760608201516060860152565b61070660808201516080860152565b01511515910152565b60c08101929161019091906106b9565b34610157576101be61073a6107353660046102f3565b61124c565b6040519182918261070f565b610172916008021c6101c2565b906101729154610746565b61017260006002610753565b6020810192916101909190610503565b346101575761078a36600461015c565b6101be61079561075e565b6040519182918261076a565b61017260006003610175565b34610157576107bd36600461015c565b6101be6101ad6107a1565b34610157576107d836600461015c565b6106b46112d6565b61017290610492565b61017290546107e0565b6107fe906006610314565b9061080882610325565b9161081560018201610325565b9161082260028301610338565b9161082f60038201610325565b91610172600561084160048501610325565b93016107e9565b919461088861088f9298979561088160a0966108776101909a61087060c08a019e60008b0152565b6020890152565b6040870190610503565b6060850152565b6080830152565b019015159052565b34610157576101be6108b26108ad3660046102f3565b6107f3565b926108c296949692919260405190565b96879687610848565b34610157576108db36600461015c565b6101be6107956112de565b34610157576106b46108f93660046102f3565b611371565b34610157576106b46109113660046102f3565b611575565b91906040838203126101575761017290602061093282866102e6565b94016102e6565b34610157576106b461094c366004610916565b90611a07565b34610157576106b46109653660046102f3565b611a28565b61017260006004610175565b346101575761098636600461015c565b6101be6101ad61096a565b80518252906101729060c0806109c860e084016109b660208801516020870190610503565b6040870151858203604087015261052f565b946109d860608201516060860152565b60808181015167ffffffffffffffff169085015260a0818101511515908501520151910152565b602080825261017292910190610991565b34610157576101be610a2b610a263660046102f3565b611afe565b604051918291826109ff565b61017260006009610175565b3461015757610a5336600461015c565b6101be6101ad610a37565b901515815267ffffffffffffffff909116602082015260400190565b3461015757610a92610a8d3660046102f3565b611be8565b906101be610a9f60405190565b92839283610a5e565b34610157576106b4610abb3660046101f8565b611c67565b60208082526012908201527f496e73756666696369656e74207374616b650000000000000000000000000000604082015260600190565b15610afe57565b60405162461bcd60e51b815280610b1760048201610ac0565b0390fd5b90610190939291610b53610b38610b33336007610241565b610325565b610b4c610b486101726003610325565b9190565b1015610af7565b610fd7565b60208082526014908201527f496e76616c6964206d6574616461746120555249000000000000000000000000604082015260600190565b15610b9657565b60405162461bcd60e51b815280610b1760048201610b58565b6020808252600d908201527f496e76616c696420707269636500000000000000000000000000000000000000604082015260600190565b15610bed57565b60405162461bcd60e51b815280610b1760048201610baf565b634e487b7160e01b600052601160045260246000fd5b6000198114610c2b5760010190565b610c06565b90600019905b9181191691161790565b90610c50610172610c5792610307565b8254610c30565b9055565b90610190610c6860405190565b9283610426565b61017260e0610c5b565b9061018c906101c2565b67ffffffffffffffff811161044857602090601f01601f19160190565b90826000939282370152565b90929192610cc1610cbc82610c83565b610c5b565b938185528183011161015757610190916020850190610ca0565b610172913691610cac565b5190565b61017290516101c2565b9073ffffffffffffffffffffffffffffffffffffffff90610c36565b90610d20610172610c5792610238565b8254610cf4565b9160001960089290920291821b911b610c36565b9190610d4c610172610c5793610307565b908354610d27565b61019091600091610d3b565b818110610d6b575050565b80610d796000600193610d54565b01610d60565b9190601f8111610d8e57505050565b610da061019093600052602060002090565b906020601f840181900483019310610dc2575b6020601f909101040190610d60565b9091508190610db3565b90610dd5815190565b9067ffffffffffffffff821161044857610df982610df38554610358565b85610d7f565b602090601f8311600114610e3457610c57929160009183610e29575b5050600019600883021c1916906002021790565b015190503880610e15565b601f19831691610e4985600052602060002090565b9260005b818110610e8757509160029391856001969410610e6e575b50505002019055565b01516000196008601f8516021c19169055388080610e65565b91936020600181928787015181550195019201610e4d565b9061019091610dcc565b5167ffffffffffffffff1690565b9067ffffffffffffffff90610c36565b6104736101726101729267ffffffffffffffff1690565b90610eee610172610c5792610ec7565b8254610eb7565b51151590565b9068ff00000000000000009060401b610c36565b151590565b90610f24610172610c5792610f0f565b8254610efb565b6005610fc660c061019094610f4b610f4560008301610ce6565b86610c40565b610f63610f5a60208301610cea565b60018701610d10565b610f7a610f71604083015190565b60028701610e9f565b610f92610f8960608301610ce6565b60038701610c40565b610fc060048601610fae610fa860808501610ea9565b82610ede565b610fba60a08401610ef5565b90610f14565b01610ce6565b9101610c40565b9061019091610f2b565b906110a86110af916110976110c8959661107b611074610ffd610ff8868a91565b905090565b94611016600096611010610b4889610307565b11610b8f565b61102961102287610307565b8c11610be6565b61104561103e6110396004610325565b610c1c565b6004610c40565b61104f6004610325565b9861106261105b610c6f565b9a888c0152565b61106f3360208c01610c79565b610cdb565b6040880152565b611086886060880152565b67ffffffffffffffff166080860152565b600160a0850152610307565b610307565b60c0830152565b6110c36110bc6004610325565b6005610314565b610fcd565b6110d56110a36004610325565b7fefa8be02df15b3d9e3df64c38716dffefe08137dcc422847518158ed0f7ac29e61110c61110233610238565b936101b160405190565b0390a3565b90610190939291610b1b565b61017260c0610c5b565b61112f61111d565b906000825260208080808080870160005b8152016000815201600081520160008152016000905250565b610172611127565b60208082526013908201527f496e76616c696420707572636861736520494400000000000000000000000000604082015260600190565b1561119f57565b60405162461bcd60e51b815280610b1760048201611161565b9061019061123a60056111c961111d565b946111da6111d682610325565b8752565b6111f06111e960018301610325565b6020880152565b6112086111ff60028301610338565b60408801610c79565b61121e61121760038301610325565b6060880152565b61123461122d60048301610325565b6080880152565b016107e9565b151560a0840152565b610172906111b8565b61127e6101729161125b611159565b506112666000610307565b811180611283575b61127790611198565b6006610314565b611243565b506112776112946101726008610325565b821115905061126e565b6112a6611c70565b6101906112c4565b6101c26101726101729290565b610172906112ae565b6101906112d160006112bb565b611cd0565b61019061129e565b6101726000610338565b610190906112f4611c70565b611350565b60208082526011908201527f466565207261746520746f6f2068696768000000000000000000000000000000604082015260600190565b1561133757565b60405162461bcd60e51b815280610b17600482016112f9565b6101909061136a6113626103e8610307565b821115611330565b6009610c40565b610190906112e8565b61138b90611386611d32565b611456565b610190611d8b565b60208082526019908201527f496e73756666696369656e74207374616b6520616d6f756e7400000000000000604082015260600190565b156113d157565b60405162461bcd60e51b815280610b1760048201611393565b8015156101e4565b90505190610190826113ea565b9060208282031261015757610172916113f2565b6040906105cc610190949695939661143360608401986000850190610503565b6020830190610503565b6040513d6000823e3d90fd5b91908201809211610c2b57565b61146e6114666101726003610325565b8210156113ca565b6114d160208261149d7f0000000000000000000000000000000000000000000000000000000000000000610238565b6114a630610238565b60006114b160405190565b8096819582946114c56323b872dd60e01b90565b84523360048501611413565b03925af1801561157057611543575b506115076114ef336007610241565b611501836114fc83610325565b611449565b90610c40565b7fcd6dbb0e62eeb71e114bae8b2e2547921dd19209bebf32b595be3e7d247dbbb461153e61153433610238565b926101b160405190565b0390a2565b6115649060203d602011611569575b61155c8183610426565b8101906113ff565b6114e0565b503d611552565b61143d565b6101909061137a565b60208082526012908201527f496e76616c696420646174617365742049440000000000000000000000000000604082015260600190565b156115bc57565b60405162461bcd60e51b815280610b176004820161157e565b60208082526012908201527f44617461736574206e6f74206163746976650000000000000000000000000000604082015260600190565b1561161357565b60405162461bcd60e51b815280610b17600482016115d5565b906101909161163b6000610307565b81118061166f575b61164c906115b5565b61166a611665600461165f846005610314565b01610498565b61160c565b61168a565b5061164c6116806101726004610325565b8211159050611643565b9061138b91611697611d32565b6117e0565b60208082526013908201527f496e76616c696420626174636820636f756e7400000000000000000000000000604082015260600190565b156116da57565b60405162461bcd60e51b815280610b176004820161169c565b81810292918115918404141715610c2b57565b634e487b7160e01b600052601260045260246000fd5b8115611726570490565b611706565b91908203918211610c2b57565b9060ff90610c36565b90611751610172610c5792610f0f565b8254611738565b60056117cf60a061019094611772610f4560008301610ce6565b61178a61178160208301610ce6565b60018701610c40565b6117a261179960408301610cea565b60028701610d10565b6117b1610f8960608301610ce6565b6117c96117c060808301610ce6565b60048701610c40565b01610ef5565b9101611741565b9061019091611758565b60006117f56117ee82610307565b84116116d3565b611818611806610172846005610314565b9361181360038601610325565b6116f3565b9261184061182f6118296009610325565b866116f3565b61183a612710610307565b9061171c565b9061189c61184e838761172b565b926118787f0000000000000000000000000000000000000000000000000000000000000000610238565b60206323b872dd9261188a6002610338565b60405195869283926114c58860e01b90565b038189855af1928315611570576020936119ec575b506114c5866118c260018701610338565b936118dc6118cf60405190565b9889968795869460e01b90565b03925af180156115705761197c9360059361196e926119cf575b5061190e6119076110396008610325565b6008610c40565b61195c61191b6008610325565b9161192e61192761111d565b9382850152565b611939886020850152565b6119463360408501610c79565b611951896060850152565b6105c3426080850152565b6119696112776008610325565b6117d6565b01611501846114fc83610325565b61199261198c6110a36008610325565b91610307565b907fe23a9f2b581d4c09f7762bf67538c16587cdbba4484a10cf60ea9140a5feafd26119ca6119c033610238565b946101b160405190565b0390a4565b6119e79060203d6020116115695761155c8183610426565b6118f6565b611a0290843d86116115695761155c8183610426565b6118b1565b906101909161162c565b61019090611a1d611c70565b610190906003610c40565b61019090611a11565b611a39610c6f565b90600082526020808080808080880160008152016060611140565b610172611a31565b90610190611aee6005611a6d610c6f565b94611a7a6111d682610325565b611a92611a8960018301610338565b60208801610c79565b611aa16110746002830161044d565b611ab061121760038301610325565b611ad0611abf60048301610480565b67ffffffffffffffff166080880152565b611ae8611adf60048301610498565b151560a0880152565b01610325565b60c0840152565b61017290611a5c565b611b2961017291611b0d611a54565b50611b186000610307565b811180611b2e575b6110bc906115b5565b611af5565b506110bc611b3f6101726004610325565b8211159050611b20565b90611b829291611b596000610307565b831180611b86575b611b6a906115b5565b611b7d611665600461165f866005610314565b611bae565b9091565b50611b6a611b976101726004610325565b8411159050611b61565b6104736101726101729290565b611bc892600492611bc29250506005610314565b01610480565b80611be4611bd66000611ba1565b9167ffffffffffffffff1690565b1191565b611b8290600080611b49565b61019090611c00611c70565b611c0a60006112bb565b611c13816101c2565b611c1c836101c2565b14611c2b575061019090611cd0565b610b1790611c3860405190565b9182917f1e4fbdf70000000000000000000000000000000000000000000000000000000083526004830161076a565b61019090611bf4565b611c786112de565b3390611c8c611c86836101c2565b916101c2565b03611c945750565b610b1790611ca160405190565b9182917f118cdaa70000000000000000000000000000000000000000000000000000000083526004830161076a565b611cf6611cf0611ce06000610338565b611ceb846000610d10565b610238565b91610238565b907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0611d2160405190565b808061110c565b6101726002610307565b611d3c6001610325565b611d44611d28565b908114611d5657610190906001610c40565b6040517f3ee5aeb5000000000000000000000000000000000000000000000000000000008152600490fd5b6101726001610307565b610190611d96611d81565b6001610c4056fea26469706673582212209fd439e97a26c1fe3faf03e6eafe7a2943b69bba264270c3881b3871ae3f0cc264736f6c63430008180033",
  "deployedBytecode": "0x6080604052600436101561001257600080fd5b60003560e01c8063055680f0146101525780630d6b4c9f1461014d5780631006e4cb146101485780631cff85e11461014357806334f910991461013e5780633742a9f71461013957806361d027b3146101345780636854d20f1461012f578063715018a61461012a5780638392fe31146101255780638da5cb5b14610120578063ae3b7f061461011b578063b33b492414610116578063b5126a6314610111578063b56a1e7d1461010c578063c34f294014610107578063ee00422114610102578063eeca08f0146100fd578063f09ce8f3146100f85763f2fde38b0361015757610aa8565b610a7a565b610a43565b610a10565b610976565b610952565b610939565b6108fe565b6108e6565b6108cb565b610897565b6107c8565b6107ad565b61077a565b61071f565b610698565b6105d0565b6102a2565b61026e565b610192565b600080fd5b600091031261015757565b610172916008021c81565b90565b906101729154610167565b61017260006008610175565b9052565b565b34610157576101a236600461015c565b6101be6101ad610180565b6040515b9182918290815260200190565b0390f35b73ffffffffffffffffffffffffffffffffffffffff1690565b6101e4816101c2565b0361015757565b90503590610190826101db565b9060208282031261015757610172916101eb565b6101c26101726101729273ffffffffffffffffffffffffffffffffffffffff1690565b6101729061020c565b6101729061022f565b9061024b90610238565b600052602052604060002090565b6000610269610172926007610241565b610175565b34610157576101be6101ad6102843660046101f8565b610259565b61018c90610238565b6020810192916101909190610289565b34610157576102b236600461015c565b604051806101be7f000000000000000000000000000000000000000000000000000000000000000082610292565b806101e4565b90503590610190826102e0565b9060208282031261015757610172916102e6565b6101726101726101729290565b9061024b90610307565b6101729081565b610172905461031e565b610172906101c2565b610172905461032f565b634e487b7160e01b600052602260045260246000fd5b9060016002830492168015610378575b602083101461037357565b610342565b91607f1691610368565b8054600093929161039f61039583610358565b8085529360200190565b91600181169081156103f157506001146103b857505050565b6103cb9192939450600052602060002090565b916000925b8184106103dd5750500190565b8054848401526020909301926001016103d0565b92949550505060ff1916825215156020020190565b9061017291610382565b634e487b7160e01b600052604160045260246000fd5b90601f01601f1916810190811067ffffffffffffffff82111761044857604052565b610410565b906101906104679261045e60405190565b93848092610406565b0383610426565b610172905b67ffffffffffffffff1690565b610172905461046e565b6101729060401c5b60ff1690565b610172905461048a565b6104ad906005610314565b6104b681610325565b916104c360018301610338565b916104d06002820161044d565b916104dd60038301610325565b916104ea60048201610480565b9161017260056104fc60048501610498565b9301610325565b61018c906101c2565b60005b83811061051f5750506000910152565b818101518382015260200161050f565b61055061055960209361056393610544815190565b80835293849260200190565b9586910161050c565b601f01601f191690565b0190565b9260c0949897956105b26105aa61019099946105c39461059d6105cc9861059360e08c019460008d0152565b60208b0190610503565b88820360408a015261052f565b9a6060870152565b67ffffffffffffffff166080850152565b151560a0830152565b0152565b34610157576101be6105eb6105e63660046102f3565b6104a2565b936105fb97959793919360405190565b97889788610567565b909182601f830112156101575781359167ffffffffffffffff831161015757602001926001830284011161015757565b67ffffffffffffffff81166101e4565b9050359061019082610634565b9190916060818403126101575780359167ffffffffffffffff83116101575761067f84610172948401610604565b939094604061069182602087016102e6565b9401610644565b34610157576106b46106ab366004610651565b92919091611111565b604051005b80518252610190919060a09081906106d660208201516020860152565b6106e860408201516040860190610503565b6106f760608201516060860152565b61070660808201516080860152565b01511515910152565b60c08101929161019091906106b9565b34610157576101be61073a6107353660046102f3565b61124c565b6040519182918261070f565b610172916008021c6101c2565b906101729154610746565b61017260006002610753565b6020810192916101909190610503565b346101575761078a36600461015c565b6101be61079561075e565b6040519182918261076a565b61017260006003610175565b34610157576107bd36600461015c565b6101be6101ad6107a1565b34610157576107d836600461015c565b6106b46112d6565b61017290610492565b61017290546107e0565b6107fe906006610314565b9061080882610325565b9161081560018201610325565b9161082260028301610338565b9161082f60038201610325565b91610172600561084160048501610325565b93016107e9565b919461088861088f9298979561088160a0966108776101909a61087060c08a019e60008b0152565b6020890152565b6040870190610503565b6060850152565b6080830152565b019015159052565b34610157576101be6108b26108ad3660046102f3565b6107f3565b926108c296949692919260405190565b96879687610848565b34610157576108db36600461015c565b6101be6107956112de565b34610157576106b46108f93660046102f3565b611371565b34610157576106b46109113660046102f3565b611575565b91906040838203126101575761017290602061093282866102e6565b94016102e6565b34610157576106b461094c366004610916565b90611a07565b34610157576106b46109653660046102f3565b611a28565b61017260006004610175565b346101575761098636600461015c565b6101be6101ad61096a565b80518252906101729060c0806109c860e084016109b660208801516020870190610503565b6040870151858203604087015261052f565b946109d860608201516060860152565b60808181015167ffffffffffffffff169085015260a0818101511515908501520151910152565b602080825261017292910190610991565b34610157576101be610a2b610a263660046102f3565b611afe565b604051918291826109ff565b61017260006009610175565b3461015757610a5336600461015c565b6101be6101ad610a37565b901515815267ffffffffffffffff909116602082015260400190565b3461015757610a92610a8d3660046102f3565b611be8565b906101be610a9f60405190565b92839283610a5e565b34610157576106b4610abb3660046101f8565b611c67565b60208082526012908201527f496e73756666696369656e74207374616b650000000000000000000000000000604082015260600190565b15610afe57565b60405162461bcd60e51b815280610b1760048201610ac0565b0390fd5b90610190939291610b53610b38610b33336007610241565b610325565b610b4c610b486101726003610325565b9190565b1015610af7565b610fd7565b60208082526014908201527f496e76616c6964206d6574616461746120555249000000000000000000000000604082015260600190565b15610b9657565b60405162461bcd60e51b815280610b1760048201610b58565b6020808252600d908201527f496e76616c696420707269636500000000000000000000000000000000000000604082015260600190565b15610bed57565b60405162461bcd60e51b815280610b1760048201610baf565b634e487b7160e01b600052601160045260246000fd5b6000198114610c2b5760010190565b610c06565b90600019905b9181191691161790565b90610c50610172610c5792610307565b8254610c30565b9055565b90610190610c6860405190565b9283610426565b61017260e0610c5b565b9061018c906101c2565b67ffffffffffffffff811161044857602090601f01601f19160190565b90826000939282370152565b90929192610cc1610cbc82610c83565b610c5b565b938185528183011161015757610190916020850190610ca0565b610172913691610cac565b5190565b61017290516101c2565b9073ffffffffffffffffffffffffffffffffffffffff90610c36565b90610d20610172610c5792610238565b8254610cf4565b9160001960089290920291821b911b610c36565b9190610d4c610172610c5793610307565b908354610d27565b61019091600091610d3b565b818110610d6b575050565b80610d796000600193610d54565b01610d60565b9190601f8111610d8e57505050565b610da061019093600052602060002090565b906020601f840181900483019310610dc2575b6020601f909101040190610d60565b9091508190610db3565b90610dd5815190565b9067ffffffffffffffff821161044857610df982610df38554610358565b85610d7f565b602090601f8311600114610e3457610c57929160009183610e29575b5050600019600883021c1916906002021790565b015190503880610e15565b601f19831691610e4985600052602060002090565b9260005b818110610e8757509160029391856001969410610e6e575b50505002019055565b01516000196008601f8516021c19169055388080610e65565b91936020600181928787015181550195019201610e4d565b9061019091610dcc565b5167ffffffffffffffff1690565b9067ffffffffffffffff90610c36565b6104736101726101729267ffffffffffffffff1690565b90610eee610172610c5792610ec7565b8254610eb7565b51151590565b9068ff00000000000000009060401b610c36565b151590565b90610f24610172610c5792610f0f565b8254610efb565b6005610fc660c061019094610f4b610f4560008301610ce6565b86610c40565b610f63610f5a60208301610cea565b60018701610d10565b610f7a610f71604083015190565b60028701610e9f565b610f92610f8960608301610ce6565b60038701610c40565b610fc060048601610fae610fa860808501610ea9565b82610ede565b610fba60a08401610ef5565b90610f14565b01610ce6565b9101610c40565b9061019091610f2b565b906110a86110af916110976110c8959661107b611074610ffd610ff8868a91565b905090565b94611016600096611010610b4889610307565b11610b8f565b61102961102287610307565b8c11610be6565b61104561103e6110396004610325565b610c1c565b6004610c40565b61104f6004610325565b9861106261105b610c6f565b9a888c0152565b61106f3360208c01610c79565b610cdb565b6040880152565b611086886060880152565b67ffffffffffffffff166080860152565b600160a0850152610307565b610307565b60c0830152565b6110c36110bc6004610325565b6005610314565b610fcd565b6110d56110a36004610325565b7fefa8be02df15b3d9e3df64c38716dffefe08137dcc422847518158ed0f7ac29e61110c61110233610238565b936101b160405190565b0390a3565b90610190939291610b1b565b61017260c0610c5b565b61112f61111d565b906000825260208080808080870160005b8152016000815201600081520160008152016000905250565b610172611127565b60208082526013908201527f496e76616c696420707572636861736520494400000000000000000000000000604082015260600190565b1561119f57565b60405162461bcd60e51b815280610b1760048201611161565b9061019061123a60056111c961111d565b946111da6111d682610325565b8752565b6111f06111e960018301610325565b6020880152565b6112086111ff60028301610338565b60408801610c79565b61121e61121760038301610325565b6060880152565b61123461122d60048301610325565b6080880152565b016107e9565b151560a0840152565b610172906111b8565b61127e6101729161125b611159565b506112666000610307565b811180611283575b61127790611198565b6006610314565b611243565b506112776112946101726008610325565b821115905061126e565b6112a6611c70565b6101906112c4565b6101c26101726101729290565b610172906112ae565b6101906112d160006112bb565b611cd0565b61019061129e565b6101726000610338565b610190906112f4611c70565b611350565b60208082526011908201527f466565207261746520746f6f2068696768000000000000000000000000000000604082015260600190565b1561133757565b60405162461bcd60e51b815280610b17600482016112f9565b6101909061136a6113626103e8610307565b821115611330565b6009610c40565b610190906112e8565b61138b90611386611d32565b611456565b610190611d8b565b60208082526019908201527f496e73756666696369656e74207374616b6520616d6f756e7400000000000000604082015260600190565b156113d157565b60405162461bcd60e51b815280610b1760048201611393565b8015156101e4565b90505190610190826113ea565b9060208282031261015757610172916113f2565b6040906105cc610190949695939661143360608401986000850190610503565b6020830190610503565b6040513d6000823e3d90fd5b91908201809211610c2b57565b61146e6114666101726003610325565b8210156113ca565b6114d160208261149d7f0000000000000000000000000000000000000000000000000000000000000000610238565b6114a630610238565b60006114b160405190565b8096819582946114c56323b872dd60e01b90565b84523360048501611413565b03925af1801561157057611543575b506115076114ef336007610241565b611501836114fc83610325565b611449565b90610c40565b7fcd6dbb0e62eeb71e114bae8b2e2547921dd19209bebf32b595be3e7d247dbbb461153e61153433610238565b926101b160405190565b0390a2565b6115649060203d602011611569575b61155c8183610426565b8101906113ff565b6114e0565b503d611552565b61143d565b6101909061137a565b60208082526012908201527f496e76616c696420646174617365742049440000000000000000000000000000604082015260600190565b156115bc57565b60405162461bcd60e51b815280610b176004820161157e565b60208082526012908201527f44617461736574206e6f74206163746976650000000000000000000000000000604082015260600190565b1561161357565b60405162461bcd60e51b815280610b17600482016115d5565b906101909161163b6000610307565b81118061166f575b61164c906115b5565b61166a611665600461165f846005610314565b01610498565b61160c565b61168a565b5061164c6116806101726004610325565b8211159050611643565b9061138b91611697611d32565b6117e0565b60208082526013908201527f496e76616c696420626174636820636f756e7400000000000000000000000000604082015260600190565b156116da57565b60405162461bcd60e51b815280610b176004820161169c565b81810292918115918404141715610c2b57565b634e487b7160e01b600052601260045260246000fd5b8115611726570490565b611706565b91908203918211610c2b57565b9060ff90610c36565b90611751610172610c5792610f0f565b8254611738565b60056117cf60a061019094611772610f4560008301610ce6565b61178a61178160208301610ce6565b60018701610c40565b6117a261179960408301610cea565b60028701610d10565b6117b1610f8960608301610ce6565b6117c96117c060808301610ce6565b60048701610c40565b01610ef5565b9101611741565b9061019091611758565b60006117f56117ee82610307565b84116116d3565b611818611806610172846005610314565b9361181360038601610325565b6116f3565b9261184061182f6118296009610325565b866116f3565b61183a612710610307565b9061171c565b9061189c61184e838761172b565b926118787f0000000000000000000000000000000000000000000000000000000000000000610238565b60206323b872dd9261188a6002610338565b60405195869283926114c58860e01b90565b038189855af1928315611570576020936119ec575b506114c5866118c260018701610338565b936118dc6118cf60405190565b9889968795869460e01b90565b03925af180156115705761197c9360059361196e926119cf575b5061190e6119076110396008610325565b6008610c40565b61195c61191b6008610325565b9161192e61192761111d565b9382850152565b611939886020850152565b6119463360408501610c79565b611951896060850152565b6105c3426080850152565b6119696112776008610325565b6117d6565b01611501846114fc83610325565b61199261198c6110a36008610325565b91610307565b907fe23a9f2b581d4c09f7762bf67538c16587cdbba4484a10cf60ea9140a5feafd26119ca6119c033610238565b946101b160405190565b0390a4565b6119e79060203d6020116115695761155c8183610426565b6118f6565b611a0290843d86116115695761155c8183610426565b6118b1565b906101909161162c565b61019090611a1d611c70565b610190906003610c40565b61019090611a11565b611a39610c6f565b90600082526020808080808080880160008152016060611140565b610172611a31565b90610190611aee6005611a6d610c6f565b94611a7a6111d682610325565b611a92611a8960018301610338565b60208801610c79565b611aa16110746002830161044d565b611ab061121760038301610325565b611ad0611abf60048301610480565b67ffffffffffffffff166080880152565b611ae8611adf60048301610498565b151560a0880152565b01610325565b60c0840152565b61017290611a5c565b611b2961017291611b0d611a54565b50611b186000610307565b811180611b2e575b6110bc906115b5565b611af5565b506110bc611b3f6101726004610325565b8211159050611b20565b90611b829291611b596000610307565b831180611b86575b611b6a906115b5565b611b7d611665600461165f866005610314565b611bae565b9091565b50611b6a611b976101726004610325565b8411159050611b61565b6104736101726101729290565b611bc892600492611bc29250506005610314565b01610480565b80611be4611bd66000611ba1565b9167ffffffffffffffff1690565b1191565b611b8290600080611b49565b61019090611c00611c70565b611c0a60006112bb565b611c13816101c2565b611c1c836101c2565b14611c2b575061019090611cd0565b610b1790611c3860405190565b9182917f1e4fbdf70000000000000000000000000000000000000000000000000000000083526004830161076a565b61019090611bf4565b611c786112de565b3390611c8c611c86836101c2565b916101c2565b03611c945750565b610b1790611ca160405190565b9182917f118cdaa70000000000000000000000000000000000000000000000000000000083526004830161076a565b611cf6611cf0611ce06000610338565b611ceb846000610d10565b610238565b91610238565b907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0611d2160405190565b808061110c565b6101726002610307565b611d3c6001610325565b611d44611d28565b908114611d5657610190906001610c40565b6040517f3ee5aeb5000000000000000000000000000000000000000000000000000000008152600490fd5b6101726001610307565b610190611d96611d81565b6001610c4056fea26469706673582212209fd439e97a26c1fe3faf03e6eafe7a2943b69bba264270c3881b3871ae3f0cc264736f6c63430008180033",
  "devdoc": {
    "details": "Minimized core version to avoid Yul stack depth issues",
    "errors": {
      "OwnableInvalidOwner(address)": [
        {
          "details": "The owner is not a valid owner account. (eg. `address(0)`)"
        }
      ],
      "OwnableUnauthorizedAccount(address)": [
        {
          "details": "The caller account is not authorized to perform an operation."
        }
      ],
      "ReentrancyGuardReentrantCall()": [
        {
          "details": "Unauthorized reentrant call."
        }
      ]
    },
    "kind": "dev",
    "methods": {
      "constructor": {
        "params": {
          "_providerStakeAmount": "Minimum provider stake amount",
          "_treasury": "Treasury address",
          "_usdfc": "USDFC token address"
        }
      },
      "getDataset(uint256)": {
        "params": {
          "datasetId": "Dataset ID"
        },
        "returns": {
          "_0": "Dataset information"
        }
      },
      "getPurchase(uint256)": {
        "params": {
          "purchaseId": "Purchase ID"
        },
        "returns": {
          "_0": "Purchase information"
        }
      },
      "isDatasetDealActive(uint256)": {
        "params": {
          "datasetId": "Dataset ID"
        },
        "returns": {
          "dealId": "The Filecoin deal ID (0 if no deal)",
          "isActive": "Whether the deal is active (basic check: deal ID exists)"
        }
      },
      "listDataset(string,uint256,uint64)": {
        "params": {
          "filecoinDealId": "Associated Filecoin deal ID (optional)",
          "metadataUri": "IPFS URI for dataset metadata",
          "pricePerBatch": "Price per training batch in USDFC"
        }
      },
      "owner()": {
        "details": "Returns the address of the current owner."
      },
      "purchaseData(uint256,uint256)": {
        "params": {
          "batchCount": "Number of batches to purchase",
          "datasetId": "Dataset to purchase"
        }
      },
      "renounceOwnership()": {
        "details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner."
      },
      "stakeAsProvider(uint256)": {
        "params": {
          "amount": "Amount to stake"
        }
      },
      "transferOwnership(address)": {
        "details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
      },
      "updatePlatformFeeRate(uint256)": {
        "params": {
          "newFeeRate": "New fee rate in basis points"
        }
      },
      "updateProviderStakeAmount(uint256)": {
        "params": {
          "newStakeAmount": "New minimum stake amount"
        }
      }
    },
    "title": "VerifiAIMarketplace",
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {
      "constructor": {
        "notice": "Constructor"
      },
      "datasetCounter()": {
        "notice": "Current dataset ID counter"
      },
      "datasets(uint256)": {
        "notice": "Mapping from dataset ID to dataset info"
      },
      "getDataset(uint256)": {
        "notice": "Get dataset information"
      },
      "getPurchase(uint256)": {
        "notice": "Get purchase information"
      },
      "isDatasetDealActive(uint256)": {
        "notice": "Check if a dataset has an active Filecoin deal"
      },
      "listDataset(string,uint256,uint64)": {
        "notice": "List a new dataset for sale"
      },
      "platformFeeRate()": {
        "notice": "Platform fee (in basis points, 250 = 2.5%)"
      },
      "providerStakeAmount()": {
        "notice": "Minimum stake amount for providers"
      },
      "providerStakes(address)": {
        "notice": "Provider stakes"
      },
      "purchaseCounter()": {
        "notice": "Purchase counter"
      },
      "purchaseData(uint256,uint256)": {
        "notice": "Purchase training data"
      },
      "purchases(uint256)": {
        "notice": "Mapping from purchase ID to purchase info"
      },
      "stakeAsProvider(uint256)": {
        "notice": "Stake USDFC to become a data provider"
      },
      "treasury()": {
        "notice": "Treasury address for fees"
      },
      "updatePlatformFeeRate(uint256)": {
        "notice": "Update platform fee rate (owner only)"
      },
      "updateProviderStakeAmount(uint256)": {
        "notice": "Update provider stake requirement (owner only)"
      },
      "usdfc()": {
        "notice": "USDFC token contract for payments"
      }
    },
    "notice": "Verifiable AI Training Data Marketplace for Protocol Labs Genesis Hackathon 2025",
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 1068,
        "contract": "contracts/VerifiAIMarketplace.sol:VerifiAIMarketplace",
        "label": "_owner",
        "offset": 0,
        "slot": "0",
        "type": "t_address"
      },
      {
        "astId": 3910,
        "contract": "contracts/VerifiAIMarketplace.sol:VerifiAIMarketplace",
        "label": "_status",
        "offset": 0,
        "slot": "1",
        "type": "t_uint256"
      },
      {
        "astId": 17453,
        "contract": "contracts/VerifiAIMarketplace.sol:VerifiAIMarketplace",
        "label": "treasury",
        "offset": 0,
        "slot": "2",
        "type": "t_address"
      },
      {
        "astId": 17456,
        "contract": "contracts/VerifiAIMarketplace.sol:VerifiAIMarketplace",
        "label": "providerStakeAmount",
        "offset": 0,
        "slot": "3",
        "type": "t_uint256"
      },
      {
        "astId": 17459,
        "contract": "contracts/VerifiAIMarketplace.sol:VerifiAIMarketplace",
        "label": "datasetCounter",
        "offset": 0,
        "slot": "4",
        "type": "t_uint256"
      },
      {
        "astId": 17495,
        "contract": "contracts/VerifiAIMarketplace.sol:VerifiAIMarketplace",
        "label": "datasets",
        "offset": 0,
        "slot": "5",
        "type": "t_mapping(t_uint256,t_struct(Dataset)17475_storage)"
      },
      {
        "astId": 17501,
        "contract": "contracts/VerifiAIMarketplace.sol:VerifiAIMarketplace",
        "label": "purchases",
        "offset": 0,
        "slot": "6",
        "type": "t_mapping(t_uint256,t_struct(Purchase)17489_storage)"
      },
      {
        "astId": 17506,
        "contract": "contracts/VerifiAIMarketplace.sol:VerifiAIMarketplace",
        "label": "providerStakes",
        "offset": 0,
        "slot": "7",
        "type": "t_mapping(t_address,t_uint256)"
      },
      {
        "astId": 17509,
        "contract": "contracts/VerifiAIMarketplace.sol:VerifiAIMarketplace",
        "label": "purchaseCounter",
        "offset": 0,
        "slot": "8",
        "type": "t_uint256"
      },
      {
        "astId": 17513,
        "contract": "contracts/VerifiAIMarketplace.sol:VerifiAIMarketplace",
        "label": "platformFeeRate",
        "offset": 0,
        "slot": "9",
        "type": "t_uint256"
      }
    ],
    "types": {
      "t_address": {
        "encoding": "inplace",
        "label": "address",
        "numberOfBytes": "20"
      },
      "t_bool": {
        "encoding": "inplace",
        "label": "bool",
        "numberOfBytes": "1"
      },
      "t_mapping(t_address,t_uint256)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => uint256)",
        "numberOfBytes": "32",
        "value": "t_uint256"
      },
      "t_mapping(t_uint256,t_struct(Dataset)17475_storage)": {
        "encoding": "mapping",
        "key": "t_uint256",
        "label": "mapping(uint256 => struct VerifiAIMarketplace.Dataset)",
        "numberOfBytes": "32",
        "value": "t_struct(Dataset)17475_storage"
      },
      "t_mapping(t_uint256,t_struct(Purchase)17489_storage)": {
        "encoding": "mapping",
        "key": "t_uint256",
        "label": "mapping(uint256 => struct VerifiAIMarketplace.Purchase)",
        "numberOfBytes": "32",
        "value": "t_struct(Purchase)17489_storage"
      },
      "t_string_storage": {
        "encoding": "bytes",
        "label": "string",
        "numberOfBytes": "32"
      },
      "t_struct(Dataset)17475_storage": {
        "encoding": "inplace",
        "label": "struct VerifiAIMarketplace.Dataset",
        "members": [
          {
            "astId": 17462,
            "contract": "contracts/VerifiAIMarketplace.sol:VerifiAIMarketplace",
            "label": "id",
            "offset": 0,
            "slot": "0",
            "type": "t_uint256"
          },
          {
            "astId": 17464,
            "contract": "contracts/VerifiAIMarketplace.sol:VerifiAIMarketplace",
            "label": "provider",
            "offset": 0,
            "slot": "1",
            "type": "t_address"
          },
          {
            "astId": 17466,
            "contract": "contracts/VerifiAIMarketplace.sol:VerifiAIMarketplace",
            "label": "metadataUri",
            "offset": 0,
            "slot": "2",
            "type": "t_string_storage"
          },
          {
            "astId": 17468,
            "contract": "contracts/VerifiAIMarketplace.sol:VerifiAIMarketplace",
            "label": "pricePerBatch",
            "offset": 0,
            "slot": "3",
            "type": "t_uint256"
          },
          {
            "astId": 17470,
            "contract": "contracts/VerifiAIMarketplace.sol:VerifiAIMarketplace",
            "label": "filecoinDealId",
            "offset": 0,
            "slot": "4",
            "type": "t_uint64"
          },
          {
            "astId": 17472,
            "contract": "contracts/VerifiAIMarketplace.sol:VerifiAIMarketplace",
            "label": "isActive",
            "offset": 8,
            "slot": "4",
            "type": "t_bool"
          },
          {
            "astId": 17474,
            "contract": "contracts/VerifiAIMarketplace.sol:VerifiAIMarketplace",
            "label": "totalSales",
            "offset": 0,
            "slot": "5",
            "type": "t_uint256"
          }
        ],
        "numberOfBytes": "192"
      },
      "t_struct(Purchase)17489_storage": {
        "encoding": "inplace",
        "label": "struct VerifiAIMarketplace.Purchase",
        "members": [
          {
            "astId": 17478,
            "contract": "contracts/VerifiAIMarketplace.sol:VerifiAIMarketplace",
            "label": "id",
            "offset": 0,
            "slot": "0",
            "type": "t_uint256"
          },
          {
            "astId": 17480,
            "contract": "contracts/VerifiAIMarketplace.sol:VerifiAIMarketplace",
            "label": "datasetId",
            "offset": 0,
            "slot": "1",
            "type": "t_uint256"
          },
          {
            "astId": 17482,
            "contract": "contracts/VerifiAIMarketplace.sol:VerifiAIMarketplace",
            "label": "buyer",
            "offset": 0,
            "slot": "2",
            "type": "t_address"
          },
          {
            "astId": 17484,
            "contract": "contracts/VerifiAIMarketplace.sol:VerifiAIMarketplace",
            "label": "amount",
            "offset": 0,
            "slot": "3",
            "type": "t_uint256"
          },
          {
            "astId": 17486,
            "contract": "contracts/VerifiAIMarketplace.sol:VerifiAIMarketplace",
            "label": "timestamp",
            "offset": 0,
            "slot": "4",
            "type": "t_uint256"
          },
          {
            "astId": 17488,
            "contract": "contracts/VerifiAIMarketplace.sol:VerifiAIMarketplace",
            "label": "isVerified",
            "offset": 0,
            "slot": "5",
            "type": "t_bool"
          }
        ],
        "numberOfBytes": "192"
      },
      "t_uint256": {
        "encoding": "inplace",
        "label": "uint256",
        "numberOfBytes": "32"
      },
      "t_uint64": {
        "encoding": "inplace",
        "label": "uint64",
        "numberOfBytes": "8"
      }
    }
  }
}